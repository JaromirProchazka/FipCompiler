Terminals unused in grammar

    ":"
    "goto"
    "continue"
    "break"


Grammar

    0 $accept: translation_unit "end of file"

    1 translation_unit: external_declaration
    2                 | translation_unit external_declaration

    3 external_declaration: function_definition
    4                     | declaration

    5 function_definition: function_definition_head block_item_list "}"
    6                    | function_definition_head "}"

    7 function_definition_info: declaration_specifiers declarator

    8 function_definition_head: function_definition_info "{"

    9 primary_expression: enumeration_constant
   10                   | "integer literal"
   11                   | "string literal"
   12                   | "(" expression ")"

   13 postfix_expression: primary_expression
   14                   | postfix_expression "[" expression "]"
   15                   | postfix_expression "(" argument_expression_list ")"
   16                   | postfix_expression "." "identifier"
   17                   | postfix_expression "->" "identifier"
   18                   | postfix_expression "++ or --"

   19 argument_expression_list: assignment_expression
   20                         | argument_expression_list "," assignment_expression
   21                         | ε

   22 unary_expression: postfix_expression
   23                 | "++ or --" unary_expression
   24                 | unary_operator cast_expression
   25                 | "sizeof" "(" type_name ")"

   26 unary_operator: "&"
   27               | "*"
   28               | "+ or -"
   29               | "!"

   30 cast_expression: unary_expression

   31 multiplicative_expression: cast_expression
   32                          | multiplicative_expression "*" cast_expression
   33                          | multiplicative_expression "/ or %" cast_expression

   34 additive_expression: multiplicative_expression
   35                    | additive_expression "+ or -" multiplicative_expression

   36 relational_expression: additive_expression
   37                      | relational_expression "<, >, <=, or >=" additive_expression

   38 equality_expression: relational_expression
   39                    | equality_expression "== or !=" relational_expression

   40 logical_and_expression: equality_expression
   41                       | logical_and_expression "&&" equality_expression

   42 logical_or_expression: logical_and_expression
   43                      | logical_or_expression "||" logical_and_expression

   44 assignment_expression: logical_or_expression
   45                      | unary_expression assignment_operator assignment_expression

   46 assignment_operator: "*=, /=, %=, +=, or -="
   47                    | "="

   48 expression: assignment_expression

   49 constant_expression: logical_or_expression

   50 declaration: no_leading_attribute_declaration

   51 no_leading_attribute_declaration: declaration_specifiers init_declarator_list ";"

   52 declaration_specifiers: declaration_specifier
   53                       | declaration_specifier declaration_specifiers

   54 declaration_specifier: storage_class_specifier
   55                      | type_specifier_qualifier

   56 init_declarator_list: init_declarator
   57                     | init_declarator_list "," init_declarator

   58 init_declarator: declarator

   59 storage_class_specifier: "typedef"

   60 type_specifier: "void"
   61               | "_Bool, char, or int"
   62               | struct_or_union_specifier
   63               | enum_specifier
   64               | typedef_name

   65 struct_decl_head: struct_or_union "identifier"

   66 struct_or_union_specifier: struct_decl_head "{" member_declaration_list "}"
   67                          | struct_decl_head "{" "}"
   68                          | struct_decl_head

   69 struct_or_union: "struct"

   70 member_declaration_list: member_declaration
   71                        | member_declaration_list member_declaration

   72 member_declaration: specifier_qualifier_list member_declarator_list ";"

   73 specifier_qualifier_list: type_specifier_qualifier
   74                         | type_specifier_qualifier specifier_qualifier_list

   75 type_specifier_qualifier: type_specifier
   76                         | type_qualifier

   77 member_declarator_list: member_declarator
   78                       | member_declarator_list "," member_declarator

   79 member_declarator: declarator

   80 enum_specifier: "enum" "identifier" "{" enumerator_list "}"
   81               | "enum" "identifier" "{" enumerator_list "," "}"
   82               | "enum" "identifier"

   83 enumerator_list: enumerator
   84                | enumerator_list "," enumerator

   85 enumerator: enumeration_constant
   86           | enumeration_constant "=" constant_expression

   87 enumeration_constant: "identifier"

   88 type_qualifier: "const"

   89 declarator: pointer direct_declarator
   90           | direct_declarator

   91 direct_declarator: "identifier"
   92                  | "(" declarator ")"
   93                  | array_declarator
   94                  | function_declarator

   95 array_declarator: direct_declarator "[" assignment_expression "]"

   96 function_declarator: direct_declarator "(" parameter_type_list ")"

   97 pointer: "*" type_qualifier_list pointer
   98        | "*" pointer
   99        | "*" type_qualifier_list
  100        | "*"

  101 type_qualifier_list: type_qualifier
  102                    | type_qualifier_list type_qualifier

  103 parameter_type_list: parameter_list

  104 parameter_list: parameter_declaration
  105               | parameter_list "," parameter_declaration

  106 parameter_declaration: declaration_specifiers declarator
  107                      | declaration_specifiers abstract_declarator
  108                      | declaration_specifiers
  109                      | "." "." "."

  110 type_name: specifier_qualifier_list abstract_declarator
  111          | specifier_qualifier_list

  112 abstract_declarator: pointer
  113                    | pointer direct_abstract_declarator
  114                    | direct_abstract_declarator

  115 direct_abstract_declarator: "(" abstract_declarator ")"
  116                           | array_abstract_declarator
  117                           | function_abstract_declarator

  118 array_abstract_declarator: direct_abstract_declarator "[" assignment_expression "]"
  119                          | "[" assignment_expression "]"

  120 function_abstract_declarator: direct_abstract_declarator "(" parameter_type_list ")"
  121                             | "(" parameter_type_list ")"

  122 typedef_name: "type identifier"

  123 statement: non_split_statement
  124          | split_statement

  125 compound_statement_head: "{"

  126 compound_statement: compound_statement_head compound_statement_body

  127 compound_statement_body: block_item_list "}"
  128                        | "}"

  129 block_item_list: block_item
  130                | block_item_list block_item

  131 block_item: declaration
  132           | statement

  133 expression_statement: expression_opt ";"

  134 expression_opt: expression
  135               | ε

  136 if_statement_head: "if" "(" expression ")"

  137 if_non_split_statement: if_statement_head non_split_statement

  138 if_non_split_statement_else: if_non_split_statement "else"

  139 while_statement_head: "while" "(" expression ")"

  140 do_statement_head: "do"

  141 non_split_statement: if_non_split_statement_else non_split_statement
  142                    | while_statement_head non_split_statement
  143                    | "for" "(" expression_opt ";" expression_opt ";" expression_opt ")" non_split_statement
  144                    | do_statement_head non_split_statement "while" "(" expression ")" ";"
  145                    | jump_statement
  146                    | expression_statement
  147                    | compound_statement

  148 split_statement: if_statement_head statement
  149                | if_non_split_statement_else split_statement
  150                | while_statement_head split_statement
  151                | "for" "(" expression_opt ";" expression_opt ";" expression_opt ")" split_statement
  152                | do_statement_head split_statement "while" "(" expression ")" ";"

  153 jump_statement: "return" expression_opt ";"


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256)
    "[" (258) 14 95 118 119
    "]" (259) 14 95 118 119
    "(" (260) 12 15 25 92 96 115 120 121 136 139 143 144 151 152
    ")" (261) 12 15 25 92 96 115 120 121 136 139 143 144 151 152
    "." (262) 16 109
    "->" (263) 17
    "++ or --" <cecko::gt_incdec> (264) 18 23
    "," (265) 20 57 78 81 84 105
    "&" (266) 26
    "*" (267) 27 32 97 98 99 100
    "+ or -" <cecko::gt_addop> (268) 28 35
    "!" (269) 29
    "/ or %" <cecko::gt_divop> (270) 33
    "<, >, <=, or >=" <cecko::gt_cmpo> (271) 37
    "== or !=" <cecko::gt_cmpe> (272) 39
    "&&" (273) 41
    "||" (274) 43
    "=" (275) 47 86
    "*=, /=, %=, +=, or -=" <cecko::gt_cass> (276) 46
    ";" (277) 51 72 133 143 144 151 152 153
    "{" (278) 8 66 67 80 81 125
    "}" (279) 5 6 66 67 80 81 127 128
    ":" (280)
    "typedef" (281) 59
    "void" (282) 60
    "_Bool, char, or int" <cecko::gt_etype> (283) 61
    "struct" (284) 69
    "enum" (285) 80 81 82
    "const" (286) 88
    "if" (287) 136
    "else" (288) 138
    "do" (289) 140
    "while" (290) 139 144 152
    "for" (291) 143 151
    "goto" (292)
    "continue" (293)
    "break" (294)
    "return" (295) 153
    "sizeof" (296) 25
    "identifier" <cecko::CIName> (297) 16 17 65 80 81 82 87 91
    "type identifier" <cecko::CIName> (298) 122
    "integer literal" <int> (299) 10
    "string literal" <cecko::CIName> (300) 11


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    translation_unit (47)
        on left: 1 2
        on right: 0 2
    external_declaration (48)
        on left: 3 4
        on right: 1 2
    function_definition (49)
        on left: 5 6
        on right: 3
    function_definition_info (50)
        on left: 7
        on right: 8
    function_definition_head (51)
        on left: 8
        on right: 5 6
    primary_expression <casem::InstructionWrapper> (52)
        on left: 9 10 11 12
        on right: 13
    postfix_expression <casem::InstructionWrapper> (53)
        on left: 13 14 15 16 17 18
        on right: 14 15 16 17 18 22
    argument_expression_list <casem::InstructionArray> (54)
        on left: 19 20 21
        on right: 15 20
    unary_expression <casem::InstructionWrapper> (55)
        on left: 22 23 24 25
        on right: 23 30 45
    unary_operator <casem::UnaryOperator> (56)
        on left: 26 27 28 29
        on right: 24
    cast_expression <casem::InstructionWrapper> (57)
        on left: 30
        on right: 24 31 32 33
    multiplicative_expression <casem::InstructionWrapper> (58)
        on left: 31 32 33
        on right: 32 33 34 35
    additive_expression <casem::InstructionWrapper> (59)
        on left: 34 35
        on right: 35 36 37
    relational_expression <casem::InstructionWrapper> (60)
        on left: 36 37
        on right: 37 38 39
    equality_expression <casem::InstructionWrapper> (61)
        on left: 38 39
        on right: 39 40 41
    logical_and_expression <casem::InstructionWrapper> (62)
        on left: 40 41
        on right: 41 42 43
    logical_or_expression <casem::InstructionWrapper> (63)
        on left: 42 43
        on right: 43 44 49
    assignment_expression <casem::InstructionWrapper> (64)
        on left: 44 45
        on right: 19 20 45 48 95 118 119
    assignment_operator <cecko::gt_cass> (65)
        on left: 46 47
        on right: 45
    expression <casem::InstructionWrapper> (66)
        on left: 48
        on right: 12 14 134 136 139 144 152
    constant_expression (67)
        on left: 49
        on right: 86
    declaration (68)
        on left: 50
        on right: 4 131
    no_leading_attribute_declaration (69)
        on left: 51
        on right: 50
    declaration_specifiers <casem::CKTypeRefDefPack> (70)
        on left: 52 53
        on right: 7 51 53 106 107 108
    declaration_specifier <casem::CKTypeRefDefPack> (71)
        on left: 54 55
        on right: 52 53
    init_declarator_list <casem::TypeRefPack_Action> (72)
        on left: 56 57
        on right: 51 57
    init_declarator <casem::TypeRefPack_Action> (73)
        on left: 58
        on right: 56 57
    storage_class_specifier (74)
        on left: 59
        on right: 54
    type_specifier <cecko::CKTypeSafeObs> (75)
        on left: 60 61 62 63 64
        on right: 75
    struct_decl_head <cecko::CKStructTypeSafeObs> (76)
        on left: 65
        on right: 66 67 68
    struct_or_union_specifier <cecko::CKStructTypeSafeObs> (77)
        on left: 66 67 68
        on right: 62
    struct_or_union (78)
        on left: 69
        on right: 65
    member_declaration_list <cecko::CKStructItemArray> (79)
        on left: 70 71
        on right: 66 71
    member_declaration <cecko::CKStructItemArray> (80)
        on left: 72
        on right: 70 71
    specifier_qualifier_list <casem::CKTypeRefDefPack> (81)
        on left: 73 74
        on right: 72 74 110 111
    type_specifier_qualifier <casem::CKTypeRefDefPack> (82)
        on left: 75 76
        on right: 55 73 74
    member_declarator_list <casem::TypeRefPack_Action> (83)
        on left: 77 78
        on right: 72 78
    member_declarator <casem::TypeRefPack_Action> (84)
        on left: 79
        on right: 77 78
    enum_specifier <cecko::CIName> (85)
        on left: 80 81 82
        on right: 63
    enumerator_list (86)
        on left: 83 84
        on right: 80 81 84
    enumerator (87)
        on left: 85 86
        on right: 83 84
    enumeration_constant <cecko::CIName> (88)
        on left: 87
        on right: 9 85 86
    type_qualifier <casem::CKTypeRefDefPack> (89)
        on left: 88
        on right: 76 101 102
    declarator <casem::TypeRefPack_Action> (90)
        on left: 89 90
        on right: 7 58 79 92 106
    direct_declarator <casem::TypeRefPack_Action> (91)
        on left: 91 92 93 94
        on right: 89 90 95 96
    array_declarator <casem::TypeRefPack_Action> (92)
        on left: 95
        on right: 93
    function_declarator <casem::TypeRefPack_Action> (93)
        on left: 96
        on right: 94
    pointer <casem::TypeRefPack_Convertor> (94)
        on left: 97 98 99 100
        on right: 89 97 98 112 113
    type_qualifier_list <casem::CKTypeRefDefPack> (95)
        on left: 101 102
        on right: 97 99 102
    parameter_type_list <casem::TRDArray> (96)
        on left: 103
        on right: 96 120 121
    parameter_list <casem::TRDArray> (97)
        on left: 104 105
        on right: 103 105
    parameter_declaration <casem::CKTypeRefDefPack> (98)
        on left: 106 107 108 109
        on right: 104 105
    type_name <cecko::CKTypeObs> (99)
        on left: 110 111
        on right: 25
    abstract_declarator <casem::TypeRefPack_Action> (100)
        on left: 112 113 114
        on right: 107 110 115
    direct_abstract_declarator <casem::TypeRefPack_Action> (101)
        on left: 115 116 117
        on right: 113 114 118 120
    array_abstract_declarator <casem::TypeRefPack_Action> (102)
        on left: 118 119
        on right: 116
    function_abstract_declarator <casem::TypeRefPack_Action> (103)
        on left: 120 121
        on right: 117
    typedef_name <cecko::CIName> (104)
        on left: 122
        on right: 64
    statement <cecko::CKIRBasicBlockObs> (105)
        on left: 123 124
        on right: 132 148
    compound_statement_head (106)
        on left: 125
        on right: 126
    compound_statement <cecko::CKIRBasicBlockObs> (107)
        on left: 126
        on right: 147
    compound_statement_body <cecko::CKIRBasicBlockObs> (108)
        on left: 127 128
        on right: 126
    block_item_list <cecko::CKIRBasicBlockObs> (109)
        on left: 129 130
        on right: 5 127 130
    block_item <cecko::CKIRBasicBlockObs> (110)
        on left: 131 132
        on right: 129 130
    expression_statement <cecko::CKIRBasicBlockObs> (111)
        on left: 133
        on right: 146
    expression_opt <casem::InstructionWrapper> (112)
        on left: 134 135
        on right: 133 143 151 153
    if_statement_head <casem::IfControllFlowData> (113)
        on left: 136
        on right: 137 148
    if_non_split_statement <casem::IfControllFlowData> (114)
        on left: 137
        on right: 138
    if_non_split_statement_else <casem::IfControllFlowData> (115)
        on left: 138
        on right: 141 149
    while_statement_head <casem::WhileControllFlowData> (116)
        on left: 139
        on right: 142 150
    do_statement_head <casem::WhileControllFlowData> (117)
        on left: 140
        on right: 144 152
    non_split_statement <cecko::CKIRBasicBlockObs> (118)
        on left: 141 142 143 144 145 146 147
        on right: 123 137 141 142 143 144
    split_statement <cecko::CKIRBasicBlockObs> (119)
        on left: 148 149 150 151 152
        on right: 124 149 150 151 152
    jump_statement <cecko::CKIRBasicBlockObs> (120)
        on left: 153
        on right: 145


State 0

    0 $accept: • translation_unit "end of file"

    "typedef"              shift, and go to state 1
    "void"                 shift, and go to state 2
    "_Bool, char, or int"  shift, and go to state 3
    "struct"               shift, and go to state 4
    "enum"                 shift, and go to state 5
    "const"                shift, and go to state 6
    "type identifier"      shift, and go to state 7

    translation_unit                  go to state 8
    external_declaration              go to state 9
    function_definition               go to state 10
    function_definition_info          go to state 11
    function_definition_head          go to state 12
    declaration                       go to state 13
    no_leading_attribute_declaration  go to state 14
    declaration_specifiers            go to state 15
    declaration_specifier             go to state 16
    storage_class_specifier           go to state 17
    type_specifier                    go to state 18
    struct_decl_head                  go to state 19
    struct_or_union_specifier         go to state 20
    struct_or_union                   go to state 21
    type_specifier_qualifier          go to state 22
    enum_specifier                    go to state 23
    type_qualifier                    go to state 24
    typedef_name                      go to state 25


State 1

   59 storage_class_specifier: "typedef" •

    $default  reduce using rule 59 (storage_class_specifier)


State 2

   60 type_specifier: "void" •

    $default  reduce using rule 60 (type_specifier)


State 3

   61 type_specifier: "_Bool, char, or int" •

    $default  reduce using rule 61 (type_specifier)


State 4

   69 struct_or_union: "struct" •

    $default  reduce using rule 69 (struct_or_union)


State 5

   80 enum_specifier: "enum" • "identifier" "{" enumerator_list "}"
   81               | "enum" • "identifier" "{" enumerator_list "," "}"
   82               | "enum" • "identifier"

    "identifier"  shift, and go to state 26


State 6

   88 type_qualifier: "const" •

    $default  reduce using rule 88 (type_qualifier)


State 7

  122 typedef_name: "type identifier" •

    $default  reduce using rule 122 (typedef_name)


State 8

    0 $accept: translation_unit • "end of file"
    2 translation_unit: translation_unit • external_declaration

    "end of file"          shift, and go to state 27
    "typedef"              shift, and go to state 1
    "void"                 shift, and go to state 2
    "_Bool, char, or int"  shift, and go to state 3
    "struct"               shift, and go to state 4
    "enum"                 shift, and go to state 5
    "const"                shift, and go to state 6
    "type identifier"      shift, and go to state 7

    external_declaration              go to state 28
    function_definition               go to state 10
    function_definition_info          go to state 11
    function_definition_head          go to state 12
    declaration                       go to state 13
    no_leading_attribute_declaration  go to state 14
    declaration_specifiers            go to state 15
    declaration_specifier             go to state 16
    storage_class_specifier           go to state 17
    type_specifier                    go to state 18
    struct_decl_head                  go to state 19
    struct_or_union_specifier         go to state 20
    struct_or_union                   go to state 21
    type_specifier_qualifier          go to state 22
    enum_specifier                    go to state 23
    type_qualifier                    go to state 24
    typedef_name                      go to state 25


State 9

    1 translation_unit: external_declaration •

    $default  reduce using rule 1 (translation_unit)


State 10

    3 external_declaration: function_definition •

    $default  reduce using rule 3 (external_declaration)


State 11

    8 function_definition_head: function_definition_info • "{"

    "{"  shift, and go to state 29


State 12

    5 function_definition: function_definition_head • block_item_list "}"
    6                    | function_definition_head • "}"

    "("                    shift, and go to state 30
    "++ or --"             shift, and go to state 31
    "&"                    shift, and go to state 32
    "*"                    shift, and go to state 33
    "+ or -"               shift, and go to state 34
    "!"                    shift, and go to state 35
    "{"                    shift, and go to state 36
    "}"                    shift, and go to state 37
    "typedef"              shift, and go to state 1
    "void"                 shift, and go to state 2
    "_Bool, char, or int"  shift, and go to state 3
    "struct"               shift, and go to state 4
    "enum"                 shift, and go to state 5
    "const"                shift, and go to state 6
    "if"                   shift, and go to state 38
    "do"                   shift, and go to state 39
    "while"                shift, and go to state 40
    "for"                  shift, and go to state 41
    "return"               shift, and go to state 42
    "sizeof"               shift, and go to state 43
    "identifier"           shift, and go to state 44
    "type identifier"      shift, and go to state 7
    "integer literal"      shift, and go to state 45
    "string literal"       shift, and go to state 46

    $default  reduce using rule 135 (expression_opt)

    primary_expression                go to state 47
    postfix_expression                go to state 48
    unary_expression                  go to state 49
    unary_operator                    go to state 50
    cast_expression                   go to state 51
    multiplicative_expression         go to state 52
    additive_expression               go to state 53
    relational_expression             go to state 54
    equality_expression               go to state 55
    logical_and_expression            go to state 56
    logical_or_expression             go to state 57
    assignment_expression             go to state 58
    expression                        go to state 59
    declaration                       go to state 60
    no_leading_attribute_declaration  go to state 14
    declaration_specifiers            go to state 61
    declaration_specifier             go to state 16
    storage_class_specifier           go to state 17
    type_specifier                    go to state 18
    struct_decl_head                  go to state 19
    struct_or_union_specifier         go to state 20
    struct_or_union                   go to state 21
    type_specifier_qualifier          go to state 22
    enum_specifier                    go to state 23
    enumeration_constant              go to state 62
    type_qualifier                    go to state 24
    typedef_name                      go to state 25
    statement                         go to state 63
    compound_statement_head           go to state 64
    compound_statement                go to state 65
    block_item_list                   go to state 66
    block_item                        go to state 67
    expression_statement              go to state 68
    expression_opt                    go to state 69
    if_statement_head                 go to state 70
    if_non_split_statement            go to state 71
    if_non_split_statement_else       go to state 72
    while_statement_head              go to state 73
    do_statement_head                 go to state 74
    non_split_statement               go to state 75
    split_statement                   go to state 76
    jump_statement                    go to state 77


State 13

    4 external_declaration: declaration •

    $default  reduce using rule 4 (external_declaration)


State 14

   50 declaration: no_leading_attribute_declaration •

    $default  reduce using rule 50 (declaration)


State 15

    7 function_definition_info: declaration_specifiers • declarator
   51 no_leading_attribute_declaration: declaration_specifiers • init_declarator_list ";"

    "("           shift, and go to state 78
    "*"           shift, and go to state 79
    "identifier"  shift, and go to state 80

    init_declarator_list  go to state 81
    init_declarator       go to state 82
    declarator            go to state 83
    direct_declarator     go to state 84
    array_declarator      go to state 85
    function_declarator   go to state 86
    pointer               go to state 87


State 16

   52 declaration_specifiers: declaration_specifier •
   53                       | declaration_specifier • declaration_specifiers

    "typedef"              shift, and go to state 1
    "void"                 shift, and go to state 2
    "_Bool, char, or int"  shift, and go to state 3
    "struct"               shift, and go to state 4
    "enum"                 shift, and go to state 5
    "const"                shift, and go to state 6
    "type identifier"      shift, and go to state 7

    $default  reduce using rule 52 (declaration_specifiers)

    declaration_specifiers     go to state 88
    declaration_specifier      go to state 16
    storage_class_specifier    go to state 17
    type_specifier             go to state 18
    struct_decl_head           go to state 19
    struct_or_union_specifier  go to state 20
    struct_or_union            go to state 21
    type_specifier_qualifier   go to state 22
    enum_specifier             go to state 23
    type_qualifier             go to state 24
    typedef_name               go to state 25


State 17

   54 declaration_specifier: storage_class_specifier •

    $default  reduce using rule 54 (declaration_specifier)


State 18

   75 type_specifier_qualifier: type_specifier •

    $default  reduce using rule 75 (type_specifier_qualifier)


State 19

   66 struct_or_union_specifier: struct_decl_head • "{" member_declaration_list "}"
   67                          | struct_decl_head • "{" "}"
   68                          | struct_decl_head •

    "{"  shift, and go to state 89

    $default  reduce using rule 68 (struct_or_union_specifier)


State 20

   62 type_specifier: struct_or_union_specifier •

    $default  reduce using rule 62 (type_specifier)


State 21

   65 struct_decl_head: struct_or_union • "identifier"

    "identifier"  shift, and go to state 90


State 22

   55 declaration_specifier: type_specifier_qualifier •

    $default  reduce using rule 55 (declaration_specifier)


State 23

   63 type_specifier: enum_specifier •

    $default  reduce using rule 63 (type_specifier)


State 24

   76 type_specifier_qualifier: type_qualifier •

    $default  reduce using rule 76 (type_specifier_qualifier)


State 25

   64 type_specifier: typedef_name •

    $default  reduce using rule 64 (type_specifier)


State 26

   80 enum_specifier: "enum" "identifier" • "{" enumerator_list "}"
   81               | "enum" "identifier" • "{" enumerator_list "," "}"
   82               | "enum" "identifier" •

    "{"  shift, and go to state 91

    $default  reduce using rule 82 (enum_specifier)


State 27

    0 $accept: translation_unit "end of file" •

    $default  accept


State 28

    2 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 2 (translation_unit)


State 29

    8 function_definition_head: function_definition_info "{" •

    $default  reduce using rule 8 (function_definition_head)


State 30

   12 primary_expression: "(" • expression ")"

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    cast_expression            go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    assignment_expression      go to state 58
    expression                 go to state 92
    enumeration_constant       go to state 62


State 31

   23 unary_expression: "++ or --" • unary_expression

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    primary_expression    go to state 47
    postfix_expression    go to state 48
    unary_expression      go to state 93
    unary_operator        go to state 50
    enumeration_constant  go to state 62


State 32

   26 unary_operator: "&" •

    $default  reduce using rule 26 (unary_operator)


State 33

   27 unary_operator: "*" •

    $default  reduce using rule 27 (unary_operator)


State 34

   28 unary_operator: "+ or -" •

    $default  reduce using rule 28 (unary_operator)


State 35

   29 unary_operator: "!" •

    $default  reduce using rule 29 (unary_operator)


State 36

  125 compound_statement_head: "{" •

    $default  reduce using rule 125 (compound_statement_head)


State 37

    6 function_definition: function_definition_head "}" •

    $default  reduce using rule 6 (function_definition)


State 38

  136 if_statement_head: "if" • "(" expression ")"

    "("  shift, and go to state 94


State 39

  140 do_statement_head: "do" •

    $default  reduce using rule 140 (do_statement_head)


State 40

  139 while_statement_head: "while" • "(" expression ")"

    "("  shift, and go to state 95


State 41

  143 non_split_statement: "for" • "(" expression_opt ";" expression_opt ";" expression_opt ")" non_split_statement
  151 split_statement: "for" • "(" expression_opt ";" expression_opt ";" expression_opt ")" split_statement

    "("  shift, and go to state 96


State 42

  153 jump_statement: "return" • expression_opt ";"

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    $default  reduce using rule 135 (expression_opt)

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    cast_expression            go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    assignment_expression      go to state 58
    expression                 go to state 59
    enumeration_constant       go to state 62
    expression_opt             go to state 97


State 43

   25 unary_expression: "sizeof" • "(" type_name ")"

    "("  shift, and go to state 98


State 44

   87 enumeration_constant: "identifier" •

    $default  reduce using rule 87 (enumeration_constant)


State 45

   10 primary_expression: "integer literal" •

    $default  reduce using rule 10 (primary_expression)


State 46

   11 primary_expression: "string literal" •

    $default  reduce using rule 11 (primary_expression)


State 47

   13 postfix_expression: primary_expression •

    $default  reduce using rule 13 (postfix_expression)


State 48

   14 postfix_expression: postfix_expression • "[" expression "]"
   15                   | postfix_expression • "(" argument_expression_list ")"
   16                   | postfix_expression • "." "identifier"
   17                   | postfix_expression • "->" "identifier"
   18                   | postfix_expression • "++ or --"
   22 unary_expression: postfix_expression •

    "["         shift, and go to state 99
    "("         shift, and go to state 100
    "."         shift, and go to state 101
    "->"        shift, and go to state 102
    "++ or --"  shift, and go to state 103

    $default  reduce using rule 22 (unary_expression)


State 49

   30 cast_expression: unary_expression •
   45 assignment_expression: unary_expression • assignment_operator assignment_expression

    "="                      shift, and go to state 104
    "*=, /=, %=, +=, or -="  shift, and go to state 105

    $default  reduce using rule 30 (cast_expression)

    assignment_operator  go to state 106


State 50

   24 unary_expression: unary_operator • cast_expression

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    primary_expression    go to state 47
    postfix_expression    go to state 48
    unary_expression      go to state 107
    unary_operator        go to state 50
    cast_expression       go to state 108
    enumeration_constant  go to state 62


State 51

   31 multiplicative_expression: cast_expression •

    $default  reduce using rule 31 (multiplicative_expression)


State 52

   32 multiplicative_expression: multiplicative_expression • "*" cast_expression
   33                          | multiplicative_expression • "/ or %" cast_expression
   34 additive_expression: multiplicative_expression •

    "*"       shift, and go to state 109
    "/ or %"  shift, and go to state 110

    $default  reduce using rule 34 (additive_expression)


State 53

   35 additive_expression: additive_expression • "+ or -" multiplicative_expression
   36 relational_expression: additive_expression •

    "+ or -"  shift, and go to state 111

    $default  reduce using rule 36 (relational_expression)


State 54

   37 relational_expression: relational_expression • "<, >, <=, or >=" additive_expression
   38 equality_expression: relational_expression •

    "<, >, <=, or >="  shift, and go to state 112

    $default  reduce using rule 38 (equality_expression)


State 55

   39 equality_expression: equality_expression • "== or !=" relational_expression
   40 logical_and_expression: equality_expression •

    "== or !="  shift, and go to state 113

    $default  reduce using rule 40 (logical_and_expression)


State 56

   41 logical_and_expression: logical_and_expression • "&&" equality_expression
   42 logical_or_expression: logical_and_expression •

    "&&"  shift, and go to state 114

    $default  reduce using rule 42 (logical_or_expression)


State 57

   43 logical_or_expression: logical_or_expression • "||" logical_and_expression
   44 assignment_expression: logical_or_expression •

    "||"  shift, and go to state 115

    $default  reduce using rule 44 (assignment_expression)


State 58

   48 expression: assignment_expression •

    $default  reduce using rule 48 (expression)


State 59

  134 expression_opt: expression •

    $default  reduce using rule 134 (expression_opt)


State 60

  131 block_item: declaration •

    $default  reduce using rule 131 (block_item)


State 61

   51 no_leading_attribute_declaration: declaration_specifiers • init_declarator_list ";"

    "("           shift, and go to state 78
    "*"           shift, and go to state 79
    "identifier"  shift, and go to state 80

    init_declarator_list  go to state 81
    init_declarator       go to state 82
    declarator            go to state 116
    direct_declarator     go to state 84
    array_declarator      go to state 85
    function_declarator   go to state 86
    pointer               go to state 87


State 62

    9 primary_expression: enumeration_constant •

    $default  reduce using rule 9 (primary_expression)


State 63

  132 block_item: statement •

    $default  reduce using rule 132 (block_item)


State 64

  126 compound_statement: compound_statement_head • compound_statement_body

    "("                    shift, and go to state 30
    "++ or --"             shift, and go to state 31
    "&"                    shift, and go to state 32
    "*"                    shift, and go to state 33
    "+ or -"               shift, and go to state 34
    "!"                    shift, and go to state 35
    "{"                    shift, and go to state 36
    "}"                    shift, and go to state 117
    "typedef"              shift, and go to state 1
    "void"                 shift, and go to state 2
    "_Bool, char, or int"  shift, and go to state 3
    "struct"               shift, and go to state 4
    "enum"                 shift, and go to state 5
    "const"                shift, and go to state 6
    "if"                   shift, and go to state 38
    "do"                   shift, and go to state 39
    "while"                shift, and go to state 40
    "for"                  shift, and go to state 41
    "return"               shift, and go to state 42
    "sizeof"               shift, and go to state 43
    "identifier"           shift, and go to state 44
    "type identifier"      shift, and go to state 7
    "integer literal"      shift, and go to state 45
    "string literal"       shift, and go to state 46

    $default  reduce using rule 135 (expression_opt)

    primary_expression                go to state 47
    postfix_expression                go to state 48
    unary_expression                  go to state 49
    unary_operator                    go to state 50
    cast_expression                   go to state 51
    multiplicative_expression         go to state 52
    additive_expression               go to state 53
    relational_expression             go to state 54
    equality_expression               go to state 55
    logical_and_expression            go to state 56
    logical_or_expression             go to state 57
    assignment_expression             go to state 58
    expression                        go to state 59
    declaration                       go to state 60
    no_leading_attribute_declaration  go to state 14
    declaration_specifiers            go to state 61
    declaration_specifier             go to state 16
    storage_class_specifier           go to state 17
    type_specifier                    go to state 18
    struct_decl_head                  go to state 19
    struct_or_union_specifier         go to state 20
    struct_or_union                   go to state 21
    type_specifier_qualifier          go to state 22
    enum_specifier                    go to state 23
    enumeration_constant              go to state 62
    type_qualifier                    go to state 24
    typedef_name                      go to state 25
    statement                         go to state 63
    compound_statement_head           go to state 64
    compound_statement                go to state 65
    compound_statement_body           go to state 118
    block_item_list                   go to state 119
    block_item                        go to state 67
    expression_statement              go to state 68
    expression_opt                    go to state 69
    if_statement_head                 go to state 70
    if_non_split_statement            go to state 71
    if_non_split_statement_else       go to state 72
    while_statement_head              go to state 73
    do_statement_head                 go to state 74
    non_split_statement               go to state 75
    split_statement                   go to state 76
    jump_statement                    go to state 77


State 65

  147 non_split_statement: compound_statement •

    $default  reduce using rule 147 (non_split_statement)


State 66

    5 function_definition: function_definition_head block_item_list • "}"
  130 block_item_list: block_item_list • block_item

    "("                    shift, and go to state 30
    "++ or --"             shift, and go to state 31
    "&"                    shift, and go to state 32
    "*"                    shift, and go to state 33
    "+ or -"               shift, and go to state 34
    "!"                    shift, and go to state 35
    "{"                    shift, and go to state 36
    "}"                    shift, and go to state 120
    "typedef"              shift, and go to state 1
    "void"                 shift, and go to state 2
    "_Bool, char, or int"  shift, and go to state 3
    "struct"               shift, and go to state 4
    "enum"                 shift, and go to state 5
    "const"                shift, and go to state 6
    "if"                   shift, and go to state 38
    "do"                   shift, and go to state 39
    "while"                shift, and go to state 40
    "for"                  shift, and go to state 41
    "return"               shift, and go to state 42
    "sizeof"               shift, and go to state 43
    "identifier"           shift, and go to state 44
    "type identifier"      shift, and go to state 7
    "integer literal"      shift, and go to state 45
    "string literal"       shift, and go to state 46

    $default  reduce using rule 135 (expression_opt)

    primary_expression                go to state 47
    postfix_expression                go to state 48
    unary_expression                  go to state 49
    unary_operator                    go to state 50
    cast_expression                   go to state 51
    multiplicative_expression         go to state 52
    additive_expression               go to state 53
    relational_expression             go to state 54
    equality_expression               go to state 55
    logical_and_expression            go to state 56
    logical_or_expression             go to state 57
    assignment_expression             go to state 58
    expression                        go to state 59
    declaration                       go to state 60
    no_leading_attribute_declaration  go to state 14
    declaration_specifiers            go to state 61
    declaration_specifier             go to state 16
    storage_class_specifier           go to state 17
    type_specifier                    go to state 18
    struct_decl_head                  go to state 19
    struct_or_union_specifier         go to state 20
    struct_or_union                   go to state 21
    type_specifier_qualifier          go to state 22
    enum_specifier                    go to state 23
    enumeration_constant              go to state 62
    type_qualifier                    go to state 24
    typedef_name                      go to state 25
    statement                         go to state 63
    compound_statement_head           go to state 64
    compound_statement                go to state 65
    block_item                        go to state 121
    expression_statement              go to state 68
    expression_opt                    go to state 69
    if_statement_head                 go to state 70
    if_non_split_statement            go to state 71
    if_non_split_statement_else       go to state 72
    while_statement_head              go to state 73
    do_statement_head                 go to state 74
    non_split_statement               go to state 75
    split_statement                   go to state 76
    jump_statement                    go to state 77


State 67

  129 block_item_list: block_item •

    $default  reduce using rule 129 (block_item_list)


State 68

  146 non_split_statement: expression_statement •

    $default  reduce using rule 146 (non_split_statement)


State 69

  133 expression_statement: expression_opt • ";"

    ";"  shift, and go to state 122


State 70

  137 if_non_split_statement: if_statement_head • non_split_statement
  148 split_statement: if_statement_head • statement

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "{"                shift, and go to state 36
    "if"               shift, and go to state 38
    "do"               shift, and go to state 39
    "while"            shift, and go to state 40
    "for"              shift, and go to state 41
    "return"           shift, and go to state 42
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    $default  reduce using rule 135 (expression_opt)

    primary_expression           go to state 47
    postfix_expression           go to state 48
    unary_expression             go to state 49
    unary_operator               go to state 50
    cast_expression              go to state 51
    multiplicative_expression    go to state 52
    additive_expression          go to state 53
    relational_expression        go to state 54
    equality_expression          go to state 55
    logical_and_expression       go to state 56
    logical_or_expression        go to state 57
    assignment_expression        go to state 58
    expression                   go to state 59
    enumeration_constant         go to state 62
    statement                    go to state 123
    compound_statement_head      go to state 64
    compound_statement           go to state 65
    expression_statement         go to state 68
    expression_opt               go to state 69
    if_statement_head            go to state 70
    if_non_split_statement       go to state 71
    if_non_split_statement_else  go to state 72
    while_statement_head         go to state 73
    do_statement_head            go to state 74
    non_split_statement          go to state 124
    split_statement              go to state 76
    jump_statement               go to state 77


State 71

  138 if_non_split_statement_else: if_non_split_statement • "else"

    "else"  shift, and go to state 125


State 72

  141 non_split_statement: if_non_split_statement_else • non_split_statement
  149 split_statement: if_non_split_statement_else • split_statement

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "{"                shift, and go to state 36
    "if"               shift, and go to state 38
    "do"               shift, and go to state 39
    "while"            shift, and go to state 40
    "for"              shift, and go to state 41
    "return"           shift, and go to state 42
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    $default  reduce using rule 135 (expression_opt)

    primary_expression           go to state 47
    postfix_expression           go to state 48
    unary_expression             go to state 49
    unary_operator               go to state 50
    cast_expression              go to state 51
    multiplicative_expression    go to state 52
    additive_expression          go to state 53
    relational_expression        go to state 54
    equality_expression          go to state 55
    logical_and_expression       go to state 56
    logical_or_expression        go to state 57
    assignment_expression        go to state 58
    expression                   go to state 59
    enumeration_constant         go to state 62
    compound_statement_head      go to state 64
    compound_statement           go to state 65
    expression_statement         go to state 68
    expression_opt               go to state 69
    if_statement_head            go to state 70
    if_non_split_statement       go to state 71
    if_non_split_statement_else  go to state 72
    while_statement_head         go to state 73
    do_statement_head            go to state 74
    non_split_statement          go to state 126
    split_statement              go to state 127
    jump_statement               go to state 77


State 73

  142 non_split_statement: while_statement_head • non_split_statement
  150 split_statement: while_statement_head • split_statement

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "{"                shift, and go to state 36
    "if"               shift, and go to state 38
    "do"               shift, and go to state 39
    "while"            shift, and go to state 40
    "for"              shift, and go to state 41
    "return"           shift, and go to state 42
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    $default  reduce using rule 135 (expression_opt)

    primary_expression           go to state 47
    postfix_expression           go to state 48
    unary_expression             go to state 49
    unary_operator               go to state 50
    cast_expression              go to state 51
    multiplicative_expression    go to state 52
    additive_expression          go to state 53
    relational_expression        go to state 54
    equality_expression          go to state 55
    logical_and_expression       go to state 56
    logical_or_expression        go to state 57
    assignment_expression        go to state 58
    expression                   go to state 59
    enumeration_constant         go to state 62
    compound_statement_head      go to state 64
    compound_statement           go to state 65
    expression_statement         go to state 68
    expression_opt               go to state 69
    if_statement_head            go to state 70
    if_non_split_statement       go to state 71
    if_non_split_statement_else  go to state 72
    while_statement_head         go to state 73
    do_statement_head            go to state 74
    non_split_statement          go to state 128
    split_statement              go to state 129
    jump_statement               go to state 77


State 74

  144 non_split_statement: do_statement_head • non_split_statement "while" "(" expression ")" ";"
  152 split_statement: do_statement_head • split_statement "while" "(" expression ")" ";"

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "{"                shift, and go to state 36
    "if"               shift, and go to state 38
    "do"               shift, and go to state 39
    "while"            shift, and go to state 40
    "for"              shift, and go to state 41
    "return"           shift, and go to state 42
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    $default  reduce using rule 135 (expression_opt)

    primary_expression           go to state 47
    postfix_expression           go to state 48
    unary_expression             go to state 49
    unary_operator               go to state 50
    cast_expression              go to state 51
    multiplicative_expression    go to state 52
    additive_expression          go to state 53
    relational_expression        go to state 54
    equality_expression          go to state 55
    logical_and_expression       go to state 56
    logical_or_expression        go to state 57
    assignment_expression        go to state 58
    expression                   go to state 59
    enumeration_constant         go to state 62
    compound_statement_head      go to state 64
    compound_statement           go to state 65
    expression_statement         go to state 68
    expression_opt               go to state 69
    if_statement_head            go to state 70
    if_non_split_statement       go to state 71
    if_non_split_statement_else  go to state 72
    while_statement_head         go to state 73
    do_statement_head            go to state 74
    non_split_statement          go to state 130
    split_statement              go to state 131
    jump_statement               go to state 77


State 75

  123 statement: non_split_statement •

    $default  reduce using rule 123 (statement)


State 76

  124 statement: split_statement •

    $default  reduce using rule 124 (statement)


State 77

  145 non_split_statement: jump_statement •

    $default  reduce using rule 145 (non_split_statement)


State 78

   92 direct_declarator: "(" • declarator ")"

    "("           shift, and go to state 78
    "*"           shift, and go to state 79
    "identifier"  shift, and go to state 80

    declarator           go to state 132
    direct_declarator    go to state 84
    array_declarator     go to state 85
    function_declarator  go to state 86
    pointer              go to state 87


State 79

   97 pointer: "*" • type_qualifier_list pointer
   98        | "*" • pointer
   99        | "*" • type_qualifier_list
  100        | "*" •

    "*"      shift, and go to state 79
    "const"  shift, and go to state 6

    $default  reduce using rule 100 (pointer)

    type_qualifier       go to state 133
    pointer              go to state 134
    type_qualifier_list  go to state 135


State 80

   91 direct_declarator: "identifier" •

    $default  reduce using rule 91 (direct_declarator)


State 81

   51 no_leading_attribute_declaration: declaration_specifiers init_declarator_list • ";"
   57 init_declarator_list: init_declarator_list • "," init_declarator

    ","  shift, and go to state 136
    ";"  shift, and go to state 137


State 82

   56 init_declarator_list: init_declarator •

    $default  reduce using rule 56 (init_declarator_list)


State 83

    7 function_definition_info: declaration_specifiers declarator •
   58 init_declarator: declarator •

    "{"       reduce using rule 7 (function_definition_info)
    $default  reduce using rule 58 (init_declarator)


State 84

   90 declarator: direct_declarator •
   95 array_declarator: direct_declarator • "[" assignment_expression "]"
   96 function_declarator: direct_declarator • "(" parameter_type_list ")"

    "["  shift, and go to state 138
    "("  shift, and go to state 139

    $default  reduce using rule 90 (declarator)


State 85

   93 direct_declarator: array_declarator •

    $default  reduce using rule 93 (direct_declarator)


State 86

   94 direct_declarator: function_declarator •

    $default  reduce using rule 94 (direct_declarator)


State 87

   89 declarator: pointer • direct_declarator

    "("           shift, and go to state 78
    "identifier"  shift, and go to state 80

    direct_declarator    go to state 140
    array_declarator     go to state 85
    function_declarator  go to state 86


State 88

   53 declaration_specifiers: declaration_specifier declaration_specifiers •

    $default  reduce using rule 53 (declaration_specifiers)


State 89

   66 struct_or_union_specifier: struct_decl_head "{" • member_declaration_list "}"
   67                          | struct_decl_head "{" • "}"

    "}"                    shift, and go to state 141
    "void"                 shift, and go to state 2
    "_Bool, char, or int"  shift, and go to state 3
    "struct"               shift, and go to state 4
    "enum"                 shift, and go to state 5
    "const"                shift, and go to state 6
    "type identifier"      shift, and go to state 7

    type_specifier             go to state 18
    struct_decl_head           go to state 19
    struct_or_union_specifier  go to state 20
    struct_or_union            go to state 21
    member_declaration_list    go to state 142
    member_declaration         go to state 143
    specifier_qualifier_list   go to state 144
    type_specifier_qualifier   go to state 145
    enum_specifier             go to state 23
    type_qualifier             go to state 24
    typedef_name               go to state 25


State 90

   65 struct_decl_head: struct_or_union "identifier" •

    $default  reduce using rule 65 (struct_decl_head)


State 91

   80 enum_specifier: "enum" "identifier" "{" • enumerator_list "}"
   81               | "enum" "identifier" "{" • enumerator_list "," "}"

    "identifier"  shift, and go to state 44

    enumerator_list       go to state 146
    enumerator            go to state 147
    enumeration_constant  go to state 148


State 92

   12 primary_expression: "(" expression • ")"

    ")"  shift, and go to state 149


State 93

   23 unary_expression: "++ or --" unary_expression •

    $default  reduce using rule 23 (unary_expression)


State 94

  136 if_statement_head: "if" "(" • expression ")"

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    cast_expression            go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    assignment_expression      go to state 58
    expression                 go to state 150
    enumeration_constant       go to state 62


State 95

  139 while_statement_head: "while" "(" • expression ")"

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    cast_expression            go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    assignment_expression      go to state 58
    expression                 go to state 151
    enumeration_constant       go to state 62


State 96

  143 non_split_statement: "for" "(" • expression_opt ";" expression_opt ";" expression_opt ")" non_split_statement
  151 split_statement: "for" "(" • expression_opt ";" expression_opt ";" expression_opt ")" split_statement

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    $default  reduce using rule 135 (expression_opt)

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    cast_expression            go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    assignment_expression      go to state 58
    expression                 go to state 59
    enumeration_constant       go to state 62
    expression_opt             go to state 152


State 97

  153 jump_statement: "return" expression_opt • ";"

    ";"  shift, and go to state 153


State 98

   25 unary_expression: "sizeof" "(" • type_name ")"

    "void"                 shift, and go to state 2
    "_Bool, char, or int"  shift, and go to state 3
    "struct"               shift, and go to state 4
    "enum"                 shift, and go to state 5
    "const"                shift, and go to state 6
    "type identifier"      shift, and go to state 7

    type_specifier             go to state 18
    struct_decl_head           go to state 19
    struct_or_union_specifier  go to state 20
    struct_or_union            go to state 21
    specifier_qualifier_list   go to state 154
    type_specifier_qualifier   go to state 145
    enum_specifier             go to state 23
    type_qualifier             go to state 24
    type_name                  go to state 155
    typedef_name               go to state 25


State 99

   14 postfix_expression: postfix_expression "[" • expression "]"

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    cast_expression            go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    assignment_expression      go to state 58
    expression                 go to state 156
    enumeration_constant       go to state 62


State 100

   15 postfix_expression: postfix_expression "(" • argument_expression_list ")"

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    $default  reduce using rule 21 (argument_expression_list)

    primary_expression         go to state 47
    postfix_expression         go to state 48
    argument_expression_list   go to state 157
    unary_expression           go to state 49
    unary_operator             go to state 50
    cast_expression            go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    assignment_expression      go to state 158
    enumeration_constant       go to state 62


State 101

   16 postfix_expression: postfix_expression "." • "identifier"

    "identifier"  shift, and go to state 159


State 102

   17 postfix_expression: postfix_expression "->" • "identifier"

    "identifier"  shift, and go to state 160


State 103

   18 postfix_expression: postfix_expression "++ or --" •

    $default  reduce using rule 18 (postfix_expression)


State 104

   47 assignment_operator: "=" •

    $default  reduce using rule 47 (assignment_operator)


State 105

   46 assignment_operator: "*=, /=, %=, +=, or -=" •

    $default  reduce using rule 46 (assignment_operator)


State 106

   45 assignment_expression: unary_expression assignment_operator • assignment_expression

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    cast_expression            go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    assignment_expression      go to state 161
    enumeration_constant       go to state 62


State 107

   30 cast_expression: unary_expression •

    $default  reduce using rule 30 (cast_expression)


State 108

   24 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 24 (unary_expression)


State 109

   32 multiplicative_expression: multiplicative_expression "*" • cast_expression

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    primary_expression    go to state 47
    postfix_expression    go to state 48
    unary_expression      go to state 107
    unary_operator        go to state 50
    cast_expression       go to state 162
    enumeration_constant  go to state 62


State 110

   33 multiplicative_expression: multiplicative_expression "/ or %" • cast_expression

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    primary_expression    go to state 47
    postfix_expression    go to state 48
    unary_expression      go to state 107
    unary_operator        go to state 50
    cast_expression       go to state 163
    enumeration_constant  go to state 62


State 111

   35 additive_expression: additive_expression "+ or -" • multiplicative_expression

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 107
    unary_operator             go to state 50
    cast_expression            go to state 51
    multiplicative_expression  go to state 164
    enumeration_constant       go to state 62


State 112

   37 relational_expression: relational_expression "<, >, <=, or >=" • additive_expression

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 107
    unary_operator             go to state 50
    cast_expression            go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 165
    enumeration_constant       go to state 62


State 113

   39 equality_expression: equality_expression "== or !=" • relational_expression

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 107
    unary_operator             go to state 50
    cast_expression            go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 166
    enumeration_constant       go to state 62


State 114

   41 logical_and_expression: logical_and_expression "&&" • equality_expression

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 107
    unary_operator             go to state 50
    cast_expression            go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 167
    enumeration_constant       go to state 62


State 115

   43 logical_or_expression: logical_or_expression "||" • logical_and_expression

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 107
    unary_operator             go to state 50
    cast_expression            go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    logical_and_expression     go to state 168
    enumeration_constant       go to state 62


State 116

   58 init_declarator: declarator •

    $default  reduce using rule 58 (init_declarator)


State 117

  128 compound_statement_body: "}" •

    $default  reduce using rule 128 (compound_statement_body)


State 118

  126 compound_statement: compound_statement_head compound_statement_body •

    $default  reduce using rule 126 (compound_statement)


State 119

  127 compound_statement_body: block_item_list • "}"
  130 block_item_list: block_item_list • block_item

    "("                    shift, and go to state 30
    "++ or --"             shift, and go to state 31
    "&"                    shift, and go to state 32
    "*"                    shift, and go to state 33
    "+ or -"               shift, and go to state 34
    "!"                    shift, and go to state 35
    "{"                    shift, and go to state 36
    "}"                    shift, and go to state 169
    "typedef"              shift, and go to state 1
    "void"                 shift, and go to state 2
    "_Bool, char, or int"  shift, and go to state 3
    "struct"               shift, and go to state 4
    "enum"                 shift, and go to state 5
    "const"                shift, and go to state 6
    "if"                   shift, and go to state 38
    "do"                   shift, and go to state 39
    "while"                shift, and go to state 40
    "for"                  shift, and go to state 41
    "return"               shift, and go to state 42
    "sizeof"               shift, and go to state 43
    "identifier"           shift, and go to state 44
    "type identifier"      shift, and go to state 7
    "integer literal"      shift, and go to state 45
    "string literal"       shift, and go to state 46

    $default  reduce using rule 135 (expression_opt)

    primary_expression                go to state 47
    postfix_expression                go to state 48
    unary_expression                  go to state 49
    unary_operator                    go to state 50
    cast_expression                   go to state 51
    multiplicative_expression         go to state 52
    additive_expression               go to state 53
    relational_expression             go to state 54
    equality_expression               go to state 55
    logical_and_expression            go to state 56
    logical_or_expression             go to state 57
    assignment_expression             go to state 58
    expression                        go to state 59
    declaration                       go to state 60
    no_leading_attribute_declaration  go to state 14
    declaration_specifiers            go to state 61
    declaration_specifier             go to state 16
    storage_class_specifier           go to state 17
    type_specifier                    go to state 18
    struct_decl_head                  go to state 19
    struct_or_union_specifier         go to state 20
    struct_or_union                   go to state 21
    type_specifier_qualifier          go to state 22
    enum_specifier                    go to state 23
    enumeration_constant              go to state 62
    type_qualifier                    go to state 24
    typedef_name                      go to state 25
    statement                         go to state 63
    compound_statement_head           go to state 64
    compound_statement                go to state 65
    block_item                        go to state 121
    expression_statement              go to state 68
    expression_opt                    go to state 69
    if_statement_head                 go to state 70
    if_non_split_statement            go to state 71
    if_non_split_statement_else       go to state 72
    while_statement_head              go to state 73
    do_statement_head                 go to state 74
    non_split_statement               go to state 75
    split_statement                   go to state 76
    jump_statement                    go to state 77


State 120

    5 function_definition: function_definition_head block_item_list "}" •

    $default  reduce using rule 5 (function_definition)


State 121

  130 block_item_list: block_item_list block_item •

    $default  reduce using rule 130 (block_item_list)


State 122

  133 expression_statement: expression_opt ";" •

    $default  reduce using rule 133 (expression_statement)


State 123

  148 split_statement: if_statement_head statement •

    $default  reduce using rule 148 (split_statement)


State 124

  123 statement: non_split_statement •
  137 if_non_split_statement: if_statement_head non_split_statement •

    "else"    reduce using rule 137 (if_non_split_statement)
    $default  reduce using rule 123 (statement)


State 125

  138 if_non_split_statement_else: if_non_split_statement "else" •

    $default  reduce using rule 138 (if_non_split_statement_else)


State 126

  141 non_split_statement: if_non_split_statement_else non_split_statement •

    $default  reduce using rule 141 (non_split_statement)


State 127

  149 split_statement: if_non_split_statement_else split_statement •

    $default  reduce using rule 149 (split_statement)


State 128

  142 non_split_statement: while_statement_head non_split_statement •

    $default  reduce using rule 142 (non_split_statement)


State 129

  150 split_statement: while_statement_head split_statement •

    $default  reduce using rule 150 (split_statement)


State 130

  144 non_split_statement: do_statement_head non_split_statement • "while" "(" expression ")" ";"

    "while"  shift, and go to state 170


State 131

  152 split_statement: do_statement_head split_statement • "while" "(" expression ")" ";"

    "while"  shift, and go to state 171


State 132

   92 direct_declarator: "(" declarator • ")"

    ")"  shift, and go to state 172


State 133

  101 type_qualifier_list: type_qualifier •

    $default  reduce using rule 101 (type_qualifier_list)


State 134

   98 pointer: "*" pointer •

    $default  reduce using rule 98 (pointer)


State 135

   97 pointer: "*" type_qualifier_list • pointer
   99        | "*" type_qualifier_list •
  102 type_qualifier_list: type_qualifier_list • type_qualifier

    "*"      shift, and go to state 79
    "const"  shift, and go to state 6

    $default  reduce using rule 99 (pointer)

    type_qualifier  go to state 173
    pointer         go to state 174


State 136

   57 init_declarator_list: init_declarator_list "," • init_declarator

    "("           shift, and go to state 78
    "*"           shift, and go to state 79
    "identifier"  shift, and go to state 80

    init_declarator      go to state 175
    declarator           go to state 116
    direct_declarator    go to state 84
    array_declarator     go to state 85
    function_declarator  go to state 86
    pointer              go to state 87


State 137

   51 no_leading_attribute_declaration: declaration_specifiers init_declarator_list ";" •

    $default  reduce using rule 51 (no_leading_attribute_declaration)


State 138

   95 array_declarator: direct_declarator "[" • assignment_expression "]"

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    cast_expression            go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    assignment_expression      go to state 176
    enumeration_constant       go to state 62


State 139

   96 function_declarator: direct_declarator "(" • parameter_type_list ")"

    "."                    shift, and go to state 177
    "typedef"              shift, and go to state 1
    "void"                 shift, and go to state 2
    "_Bool, char, or int"  shift, and go to state 3
    "struct"               shift, and go to state 4
    "enum"                 shift, and go to state 5
    "const"                shift, and go to state 6
    "type identifier"      shift, and go to state 7

    declaration_specifiers     go to state 178
    declaration_specifier      go to state 16
    storage_class_specifier    go to state 17
    type_specifier             go to state 18
    struct_decl_head           go to state 19
    struct_or_union_specifier  go to state 20
    struct_or_union            go to state 21
    type_specifier_qualifier   go to state 22
    enum_specifier             go to state 23
    type_qualifier             go to state 24
    parameter_type_list        go to state 179
    parameter_list             go to state 180
    parameter_declaration      go to state 181
    typedef_name               go to state 25


State 140

   89 declarator: pointer direct_declarator •
   95 array_declarator: direct_declarator • "[" assignment_expression "]"
   96 function_declarator: direct_declarator • "(" parameter_type_list ")"

    "["  shift, and go to state 138
    "("  shift, and go to state 139

    $default  reduce using rule 89 (declarator)


State 141

   67 struct_or_union_specifier: struct_decl_head "{" "}" •

    $default  reduce using rule 67 (struct_or_union_specifier)


State 142

   66 struct_or_union_specifier: struct_decl_head "{" member_declaration_list • "}"
   71 member_declaration_list: member_declaration_list • member_declaration

    "}"                    shift, and go to state 182
    "void"                 shift, and go to state 2
    "_Bool, char, or int"  shift, and go to state 3
    "struct"               shift, and go to state 4
    "enum"                 shift, and go to state 5
    "const"                shift, and go to state 6
    "type identifier"      shift, and go to state 7

    type_specifier             go to state 18
    struct_decl_head           go to state 19
    struct_or_union_specifier  go to state 20
    struct_or_union            go to state 21
    member_declaration         go to state 183
    specifier_qualifier_list   go to state 144
    type_specifier_qualifier   go to state 145
    enum_specifier             go to state 23
    type_qualifier             go to state 24
    typedef_name               go to state 25


State 143

   70 member_declaration_list: member_declaration •

    $default  reduce using rule 70 (member_declaration_list)


State 144

   72 member_declaration: specifier_qualifier_list • member_declarator_list ";"

    "("           shift, and go to state 78
    "*"           shift, and go to state 79
    "identifier"  shift, and go to state 80

    member_declarator_list  go to state 184
    member_declarator       go to state 185
    declarator              go to state 186
    direct_declarator       go to state 84
    array_declarator        go to state 85
    function_declarator     go to state 86
    pointer                 go to state 87


State 145

   73 specifier_qualifier_list: type_specifier_qualifier •
   74                         | type_specifier_qualifier • specifier_qualifier_list

    "void"                 shift, and go to state 2
    "_Bool, char, or int"  shift, and go to state 3
    "struct"               shift, and go to state 4
    "enum"                 shift, and go to state 5
    "const"                shift, and go to state 6
    "type identifier"      shift, and go to state 7

    $default  reduce using rule 73 (specifier_qualifier_list)

    type_specifier             go to state 18
    struct_decl_head           go to state 19
    struct_or_union_specifier  go to state 20
    struct_or_union            go to state 21
    specifier_qualifier_list   go to state 187
    type_specifier_qualifier   go to state 145
    enum_specifier             go to state 23
    type_qualifier             go to state 24
    typedef_name               go to state 25


State 146

   80 enum_specifier: "enum" "identifier" "{" enumerator_list • "}"
   81               | "enum" "identifier" "{" enumerator_list • "," "}"
   84 enumerator_list: enumerator_list • "," enumerator

    ","  shift, and go to state 188
    "}"  shift, and go to state 189


State 147

   83 enumerator_list: enumerator •

    $default  reduce using rule 83 (enumerator_list)


State 148

   85 enumerator: enumeration_constant •
   86           | enumeration_constant • "=" constant_expression

    "="  shift, and go to state 190

    $default  reduce using rule 85 (enumerator)


State 149

   12 primary_expression: "(" expression ")" •

    $default  reduce using rule 12 (primary_expression)


State 150

  136 if_statement_head: "if" "(" expression • ")"

    ")"  shift, and go to state 191


State 151

  139 while_statement_head: "while" "(" expression • ")"

    ")"  shift, and go to state 192


State 152

  143 non_split_statement: "for" "(" expression_opt • ";" expression_opt ";" expression_opt ")" non_split_statement
  151 split_statement: "for" "(" expression_opt • ";" expression_opt ";" expression_opt ")" split_statement

    ";"  shift, and go to state 193


State 153

  153 jump_statement: "return" expression_opt ";" •

    $default  reduce using rule 153 (jump_statement)


State 154

  110 type_name: specifier_qualifier_list • abstract_declarator
  111          | specifier_qualifier_list •

    "["  shift, and go to state 194
    "("  shift, and go to state 195
    "*"  shift, and go to state 79

    $default  reduce using rule 111 (type_name)

    pointer                       go to state 196
    abstract_declarator           go to state 197
    direct_abstract_declarator    go to state 198
    array_abstract_declarator     go to state 199
    function_abstract_declarator  go to state 200


State 155

   25 unary_expression: "sizeof" "(" type_name • ")"

    ")"  shift, and go to state 201


State 156

   14 postfix_expression: postfix_expression "[" expression • "]"

    "]"  shift, and go to state 202


State 157

   15 postfix_expression: postfix_expression "(" argument_expression_list • ")"
   20 argument_expression_list: argument_expression_list • "," assignment_expression

    ")"  shift, and go to state 203
    ","  shift, and go to state 204


State 158

   19 argument_expression_list: assignment_expression •

    $default  reduce using rule 19 (argument_expression_list)


State 159

   16 postfix_expression: postfix_expression "." "identifier" •

    $default  reduce using rule 16 (postfix_expression)


State 160

   17 postfix_expression: postfix_expression "->" "identifier" •

    $default  reduce using rule 17 (postfix_expression)


State 161

   45 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 45 (assignment_expression)


State 162

   32 multiplicative_expression: multiplicative_expression "*" cast_expression •

    $default  reduce using rule 32 (multiplicative_expression)


State 163

   33 multiplicative_expression: multiplicative_expression "/ or %" cast_expression •

    $default  reduce using rule 33 (multiplicative_expression)


State 164

   32 multiplicative_expression: multiplicative_expression • "*" cast_expression
   33                          | multiplicative_expression • "/ or %" cast_expression
   35 additive_expression: additive_expression "+ or -" multiplicative_expression •

    "*"       shift, and go to state 109
    "/ or %"  shift, and go to state 110

    $default  reduce using rule 35 (additive_expression)


State 165

   35 additive_expression: additive_expression • "+ or -" multiplicative_expression
   37 relational_expression: relational_expression "<, >, <=, or >=" additive_expression •

    "+ or -"  shift, and go to state 111

    $default  reduce using rule 37 (relational_expression)


State 166

   37 relational_expression: relational_expression • "<, >, <=, or >=" additive_expression
   39 equality_expression: equality_expression "== or !=" relational_expression •

    "<, >, <=, or >="  shift, and go to state 112

    $default  reduce using rule 39 (equality_expression)


State 167

   39 equality_expression: equality_expression • "== or !=" relational_expression
   41 logical_and_expression: logical_and_expression "&&" equality_expression •

    "== or !="  shift, and go to state 113

    $default  reduce using rule 41 (logical_and_expression)


State 168

   41 logical_and_expression: logical_and_expression • "&&" equality_expression
   43 logical_or_expression: logical_or_expression "||" logical_and_expression •

    "&&"  shift, and go to state 114

    $default  reduce using rule 43 (logical_or_expression)


State 169

  127 compound_statement_body: block_item_list "}" •

    $default  reduce using rule 127 (compound_statement_body)


State 170

  144 non_split_statement: do_statement_head non_split_statement "while" • "(" expression ")" ";"

    "("  shift, and go to state 205


State 171

  152 split_statement: do_statement_head split_statement "while" • "(" expression ")" ";"

    "("  shift, and go to state 206


State 172

   92 direct_declarator: "(" declarator ")" •

    $default  reduce using rule 92 (direct_declarator)


State 173

  102 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 102 (type_qualifier_list)


State 174

   97 pointer: "*" type_qualifier_list pointer •

    $default  reduce using rule 97 (pointer)


State 175

   57 init_declarator_list: init_declarator_list "," init_declarator •

    $default  reduce using rule 57 (init_declarator_list)


State 176

   95 array_declarator: direct_declarator "[" assignment_expression • "]"

    "]"  shift, and go to state 207


State 177

  109 parameter_declaration: "." • "." "."

    "."  shift, and go to state 208


State 178

  106 parameter_declaration: declaration_specifiers • declarator
  107                      | declaration_specifiers • abstract_declarator
  108                      | declaration_specifiers •

    "["           shift, and go to state 194
    "("           shift, and go to state 209
    "*"           shift, and go to state 79
    "identifier"  shift, and go to state 80

    $default  reduce using rule 108 (parameter_declaration)

    declarator                    go to state 210
    direct_declarator             go to state 84
    array_declarator              go to state 85
    function_declarator           go to state 86
    pointer                       go to state 211
    abstract_declarator           go to state 212
    direct_abstract_declarator    go to state 198
    array_abstract_declarator     go to state 199
    function_abstract_declarator  go to state 200


State 179

   96 function_declarator: direct_declarator "(" parameter_type_list • ")"

    ")"  shift, and go to state 213


State 180

  103 parameter_type_list: parameter_list •
  105 parameter_list: parameter_list • "," parameter_declaration

    ","  shift, and go to state 214

    $default  reduce using rule 103 (parameter_type_list)


State 181

  104 parameter_list: parameter_declaration •

    $default  reduce using rule 104 (parameter_list)


State 182

   66 struct_or_union_specifier: struct_decl_head "{" member_declaration_list "}" •

    $default  reduce using rule 66 (struct_or_union_specifier)


State 183

   71 member_declaration_list: member_declaration_list member_declaration •

    $default  reduce using rule 71 (member_declaration_list)


State 184

   72 member_declaration: specifier_qualifier_list member_declarator_list • ";"
   78 member_declarator_list: member_declarator_list • "," member_declarator

    ","  shift, and go to state 215
    ";"  shift, and go to state 216


State 185

   77 member_declarator_list: member_declarator •

    $default  reduce using rule 77 (member_declarator_list)


State 186

   79 member_declarator: declarator •

    $default  reduce using rule 79 (member_declarator)


State 187

   74 specifier_qualifier_list: type_specifier_qualifier specifier_qualifier_list •

    $default  reduce using rule 74 (specifier_qualifier_list)


State 188

   81 enum_specifier: "enum" "identifier" "{" enumerator_list "," • "}"
   84 enumerator_list: enumerator_list "," • enumerator

    "}"           shift, and go to state 217
    "identifier"  shift, and go to state 44

    enumerator            go to state 218
    enumeration_constant  go to state 148


State 189

   80 enum_specifier: "enum" "identifier" "{" enumerator_list "}" •

    $default  reduce using rule 80 (enum_specifier)


State 190

   86 enumerator: enumeration_constant "=" • constant_expression

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 107
    unary_operator             go to state 50
    cast_expression            go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 219
    constant_expression        go to state 220
    enumeration_constant       go to state 62


State 191

  136 if_statement_head: "if" "(" expression ")" •

    $default  reduce using rule 136 (if_statement_head)


State 192

  139 while_statement_head: "while" "(" expression ")" •

    $default  reduce using rule 139 (while_statement_head)


State 193

  143 non_split_statement: "for" "(" expression_opt ";" • expression_opt ";" expression_opt ")" non_split_statement
  151 split_statement: "for" "(" expression_opt ";" • expression_opt ";" expression_opt ")" split_statement

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    $default  reduce using rule 135 (expression_opt)

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    cast_expression            go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    assignment_expression      go to state 58
    expression                 go to state 59
    enumeration_constant       go to state 62
    expression_opt             go to state 221


State 194

  119 array_abstract_declarator: "[" • assignment_expression "]"

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    cast_expression            go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    assignment_expression      go to state 222
    enumeration_constant       go to state 62


State 195

  115 direct_abstract_declarator: "(" • abstract_declarator ")"
  121 function_abstract_declarator: "(" • parameter_type_list ")"

    "["                    shift, and go to state 194
    "("                    shift, and go to state 195
    "."                    shift, and go to state 177
    "*"                    shift, and go to state 79
    "typedef"              shift, and go to state 1
    "void"                 shift, and go to state 2
    "_Bool, char, or int"  shift, and go to state 3
    "struct"               shift, and go to state 4
    "enum"                 shift, and go to state 5
    "const"                shift, and go to state 6
    "type identifier"      shift, and go to state 7

    declaration_specifiers        go to state 178
    declaration_specifier         go to state 16
    storage_class_specifier       go to state 17
    type_specifier                go to state 18
    struct_decl_head              go to state 19
    struct_or_union_specifier     go to state 20
    struct_or_union               go to state 21
    type_specifier_qualifier      go to state 22
    enum_specifier                go to state 23
    type_qualifier                go to state 24
    pointer                       go to state 196
    parameter_type_list           go to state 223
    parameter_list                go to state 180
    parameter_declaration         go to state 181
    abstract_declarator           go to state 224
    direct_abstract_declarator    go to state 198
    array_abstract_declarator     go to state 199
    function_abstract_declarator  go to state 200
    typedef_name                  go to state 25


State 196

  112 abstract_declarator: pointer •
  113                    | pointer • direct_abstract_declarator

    "["  shift, and go to state 194
    "("  shift, and go to state 195

    $default  reduce using rule 112 (abstract_declarator)

    direct_abstract_declarator    go to state 225
    array_abstract_declarator     go to state 199
    function_abstract_declarator  go to state 200


State 197

  110 type_name: specifier_qualifier_list abstract_declarator •

    $default  reduce using rule 110 (type_name)


State 198

  114 abstract_declarator: direct_abstract_declarator •
  118 array_abstract_declarator: direct_abstract_declarator • "[" assignment_expression "]"
  120 function_abstract_declarator: direct_abstract_declarator • "(" parameter_type_list ")"

    "["  shift, and go to state 226
    "("  shift, and go to state 227

    $default  reduce using rule 114 (abstract_declarator)


State 199

  116 direct_abstract_declarator: array_abstract_declarator •

    $default  reduce using rule 116 (direct_abstract_declarator)


State 200

  117 direct_abstract_declarator: function_abstract_declarator •

    $default  reduce using rule 117 (direct_abstract_declarator)


State 201

   25 unary_expression: "sizeof" "(" type_name ")" •

    $default  reduce using rule 25 (unary_expression)


State 202

   14 postfix_expression: postfix_expression "[" expression "]" •

    $default  reduce using rule 14 (postfix_expression)


State 203

   15 postfix_expression: postfix_expression "(" argument_expression_list ")" •

    $default  reduce using rule 15 (postfix_expression)


State 204

   20 argument_expression_list: argument_expression_list "," • assignment_expression

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    cast_expression            go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    assignment_expression      go to state 228
    enumeration_constant       go to state 62


State 205

  144 non_split_statement: do_statement_head non_split_statement "while" "(" • expression ")" ";"

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    cast_expression            go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    assignment_expression      go to state 58
    expression                 go to state 229
    enumeration_constant       go to state 62


State 206

  152 split_statement: do_statement_head split_statement "while" "(" • expression ")" ";"

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    cast_expression            go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    assignment_expression      go to state 58
    expression                 go to state 230
    enumeration_constant       go to state 62


State 207

   95 array_declarator: direct_declarator "[" assignment_expression "]" •

    $default  reduce using rule 95 (array_declarator)


State 208

  109 parameter_declaration: "." "." • "."

    "."  shift, and go to state 231


State 209

   92 direct_declarator: "(" • declarator ")"
  115 direct_abstract_declarator: "(" • abstract_declarator ")"
  121 function_abstract_declarator: "(" • parameter_type_list ")"

    "["                    shift, and go to state 194
    "("                    shift, and go to state 209
    "."                    shift, and go to state 177
    "*"                    shift, and go to state 79
    "typedef"              shift, and go to state 1
    "void"                 shift, and go to state 2
    "_Bool, char, or int"  shift, and go to state 3
    "struct"               shift, and go to state 4
    "enum"                 shift, and go to state 5
    "const"                shift, and go to state 6
    "identifier"           shift, and go to state 80
    "type identifier"      shift, and go to state 7

    declaration_specifiers        go to state 178
    declaration_specifier         go to state 16
    storage_class_specifier       go to state 17
    type_specifier                go to state 18
    struct_decl_head              go to state 19
    struct_or_union_specifier     go to state 20
    struct_or_union               go to state 21
    type_specifier_qualifier      go to state 22
    enum_specifier                go to state 23
    type_qualifier                go to state 24
    declarator                    go to state 132
    direct_declarator             go to state 84
    array_declarator              go to state 85
    function_declarator           go to state 86
    pointer                       go to state 211
    parameter_type_list           go to state 223
    parameter_list                go to state 180
    parameter_declaration         go to state 181
    abstract_declarator           go to state 224
    direct_abstract_declarator    go to state 198
    array_abstract_declarator     go to state 199
    function_abstract_declarator  go to state 200
    typedef_name                  go to state 25


State 210

  106 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 106 (parameter_declaration)


State 211

   89 declarator: pointer • direct_declarator
  112 abstract_declarator: pointer •
  113                    | pointer • direct_abstract_declarator

    "["           shift, and go to state 194
    "("           shift, and go to state 209
    "identifier"  shift, and go to state 80

    $default  reduce using rule 112 (abstract_declarator)

    direct_declarator             go to state 140
    array_declarator              go to state 85
    function_declarator           go to state 86
    direct_abstract_declarator    go to state 225
    array_abstract_declarator     go to state 199
    function_abstract_declarator  go to state 200


State 212

  107 parameter_declaration: declaration_specifiers abstract_declarator •

    $default  reduce using rule 107 (parameter_declaration)


State 213

   96 function_declarator: direct_declarator "(" parameter_type_list ")" •

    $default  reduce using rule 96 (function_declarator)


State 214

  105 parameter_list: parameter_list "," • parameter_declaration

    "."                    shift, and go to state 177
    "typedef"              shift, and go to state 1
    "void"                 shift, and go to state 2
    "_Bool, char, or int"  shift, and go to state 3
    "struct"               shift, and go to state 4
    "enum"                 shift, and go to state 5
    "const"                shift, and go to state 6
    "type identifier"      shift, and go to state 7

    declaration_specifiers     go to state 178
    declaration_specifier      go to state 16
    storage_class_specifier    go to state 17
    type_specifier             go to state 18
    struct_decl_head           go to state 19
    struct_or_union_specifier  go to state 20
    struct_or_union            go to state 21
    type_specifier_qualifier   go to state 22
    enum_specifier             go to state 23
    type_qualifier             go to state 24
    parameter_declaration      go to state 232
    typedef_name               go to state 25


State 215

   78 member_declarator_list: member_declarator_list "," • member_declarator

    "("           shift, and go to state 78
    "*"           shift, and go to state 79
    "identifier"  shift, and go to state 80

    member_declarator    go to state 233
    declarator           go to state 186
    direct_declarator    go to state 84
    array_declarator     go to state 85
    function_declarator  go to state 86
    pointer              go to state 87


State 216

   72 member_declaration: specifier_qualifier_list member_declarator_list ";" •

    $default  reduce using rule 72 (member_declaration)


State 217

   81 enum_specifier: "enum" "identifier" "{" enumerator_list "," "}" •

    $default  reduce using rule 81 (enum_specifier)


State 218

   84 enumerator_list: enumerator_list "," enumerator •

    $default  reduce using rule 84 (enumerator_list)


State 219

   43 logical_or_expression: logical_or_expression • "||" logical_and_expression
   49 constant_expression: logical_or_expression •

    "||"  shift, and go to state 115

    $default  reduce using rule 49 (constant_expression)


State 220

   86 enumerator: enumeration_constant "=" constant_expression •

    $default  reduce using rule 86 (enumerator)


State 221

  143 non_split_statement: "for" "(" expression_opt ";" expression_opt • ";" expression_opt ")" non_split_statement
  151 split_statement: "for" "(" expression_opt ";" expression_opt • ";" expression_opt ")" split_statement

    ";"  shift, and go to state 234


State 222

  119 array_abstract_declarator: "[" assignment_expression • "]"

    "]"  shift, and go to state 235


State 223

  121 function_abstract_declarator: "(" parameter_type_list • ")"

    ")"  shift, and go to state 236


State 224

  115 direct_abstract_declarator: "(" abstract_declarator • ")"

    ")"  shift, and go to state 237


State 225

  113 abstract_declarator: pointer direct_abstract_declarator •
  118 array_abstract_declarator: direct_abstract_declarator • "[" assignment_expression "]"
  120 function_abstract_declarator: direct_abstract_declarator • "(" parameter_type_list ")"

    "["  shift, and go to state 226
    "("  shift, and go to state 227

    $default  reduce using rule 113 (abstract_declarator)


State 226

  118 array_abstract_declarator: direct_abstract_declarator "[" • assignment_expression "]"

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    cast_expression            go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    assignment_expression      go to state 238
    enumeration_constant       go to state 62


State 227

  120 function_abstract_declarator: direct_abstract_declarator "(" • parameter_type_list ")"

    "."                    shift, and go to state 177
    "typedef"              shift, and go to state 1
    "void"                 shift, and go to state 2
    "_Bool, char, or int"  shift, and go to state 3
    "struct"               shift, and go to state 4
    "enum"                 shift, and go to state 5
    "const"                shift, and go to state 6
    "type identifier"      shift, and go to state 7

    declaration_specifiers     go to state 178
    declaration_specifier      go to state 16
    storage_class_specifier    go to state 17
    type_specifier             go to state 18
    struct_decl_head           go to state 19
    struct_or_union_specifier  go to state 20
    struct_or_union            go to state 21
    type_specifier_qualifier   go to state 22
    enum_specifier             go to state 23
    type_qualifier             go to state 24
    parameter_type_list        go to state 239
    parameter_list             go to state 180
    parameter_declaration      go to state 181
    typedef_name               go to state 25


State 228

   20 argument_expression_list: argument_expression_list "," assignment_expression •

    $default  reduce using rule 20 (argument_expression_list)


State 229

  144 non_split_statement: do_statement_head non_split_statement "while" "(" expression • ")" ";"

    ")"  shift, and go to state 240


State 230

  152 split_statement: do_statement_head split_statement "while" "(" expression • ")" ";"

    ")"  shift, and go to state 241


State 231

  109 parameter_declaration: "." "." "." •

    $default  reduce using rule 109 (parameter_declaration)


State 232

  105 parameter_list: parameter_list "," parameter_declaration •

    $default  reduce using rule 105 (parameter_list)


State 233

   78 member_declarator_list: member_declarator_list "," member_declarator •

    $default  reduce using rule 78 (member_declarator_list)


State 234

  143 non_split_statement: "for" "(" expression_opt ";" expression_opt ";" • expression_opt ")" non_split_statement
  151 split_statement: "for" "(" expression_opt ";" expression_opt ";" • expression_opt ")" split_statement

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    $default  reduce using rule 135 (expression_opt)

    primary_expression         go to state 47
    postfix_expression         go to state 48
    unary_expression           go to state 49
    unary_operator             go to state 50
    cast_expression            go to state 51
    multiplicative_expression  go to state 52
    additive_expression        go to state 53
    relational_expression      go to state 54
    equality_expression        go to state 55
    logical_and_expression     go to state 56
    logical_or_expression      go to state 57
    assignment_expression      go to state 58
    expression                 go to state 59
    enumeration_constant       go to state 62
    expression_opt             go to state 242


State 235

  119 array_abstract_declarator: "[" assignment_expression "]" •

    $default  reduce using rule 119 (array_abstract_declarator)


State 236

  121 function_abstract_declarator: "(" parameter_type_list ")" •

    $default  reduce using rule 121 (function_abstract_declarator)


State 237

  115 direct_abstract_declarator: "(" abstract_declarator ")" •

    $default  reduce using rule 115 (direct_abstract_declarator)


State 238

  118 array_abstract_declarator: direct_abstract_declarator "[" assignment_expression • "]"

    "]"  shift, and go to state 243


State 239

  120 function_abstract_declarator: direct_abstract_declarator "(" parameter_type_list • ")"

    ")"  shift, and go to state 244


State 240

  144 non_split_statement: do_statement_head non_split_statement "while" "(" expression ")" • ";"

    ";"  shift, and go to state 245


State 241

  152 split_statement: do_statement_head split_statement "while" "(" expression ")" • ";"

    ";"  shift, and go to state 246


State 242

  143 non_split_statement: "for" "(" expression_opt ";" expression_opt ";" expression_opt • ")" non_split_statement
  151 split_statement: "for" "(" expression_opt ";" expression_opt ";" expression_opt • ")" split_statement

    ")"  shift, and go to state 247


State 243

  118 array_abstract_declarator: direct_abstract_declarator "[" assignment_expression "]" •

    $default  reduce using rule 118 (array_abstract_declarator)


State 244

  120 function_abstract_declarator: direct_abstract_declarator "(" parameter_type_list ")" •

    $default  reduce using rule 120 (function_abstract_declarator)


State 245

  144 non_split_statement: do_statement_head non_split_statement "while" "(" expression ")" ";" •

    $default  reduce using rule 144 (non_split_statement)


State 246

  152 split_statement: do_statement_head split_statement "while" "(" expression ")" ";" •

    $default  reduce using rule 152 (split_statement)


State 247

  143 non_split_statement: "for" "(" expression_opt ";" expression_opt ";" expression_opt ")" • non_split_statement
  151 split_statement: "for" "(" expression_opt ";" expression_opt ";" expression_opt ")" • split_statement

    "("                shift, and go to state 30
    "++ or --"         shift, and go to state 31
    "&"                shift, and go to state 32
    "*"                shift, and go to state 33
    "+ or -"           shift, and go to state 34
    "!"                shift, and go to state 35
    "{"                shift, and go to state 36
    "if"               shift, and go to state 38
    "do"               shift, and go to state 39
    "while"            shift, and go to state 40
    "for"              shift, and go to state 41
    "return"           shift, and go to state 42
    "sizeof"           shift, and go to state 43
    "identifier"       shift, and go to state 44
    "integer literal"  shift, and go to state 45
    "string literal"   shift, and go to state 46

    $default  reduce using rule 135 (expression_opt)

    primary_expression           go to state 47
    postfix_expression           go to state 48
    unary_expression             go to state 49
    unary_operator               go to state 50
    cast_expression              go to state 51
    multiplicative_expression    go to state 52
    additive_expression          go to state 53
    relational_expression        go to state 54
    equality_expression          go to state 55
    logical_and_expression       go to state 56
    logical_or_expression        go to state 57
    assignment_expression        go to state 58
    expression                   go to state 59
    enumeration_constant         go to state 62
    compound_statement_head      go to state 64
    compound_statement           go to state 65
    expression_statement         go to state 68
    expression_opt               go to state 69
    if_statement_head            go to state 70
    if_non_split_statement       go to state 71
    if_non_split_statement_else  go to state 72
    while_statement_head         go to state 73
    do_statement_head            go to state 74
    non_split_statement          go to state 248
    split_statement              go to state 249
    jump_statement               go to state 77


State 248

  143 non_split_statement: "for" "(" expression_opt ";" expression_opt ";" expression_opt ")" non_split_statement •

    $default  reduce using rule 143 (non_split_statement)


State 249

  151 split_statement: "for" "(" expression_opt ";" expression_opt ";" expression_opt ")" split_statement •

    $default  reduce using rule 151 (split_statement)
