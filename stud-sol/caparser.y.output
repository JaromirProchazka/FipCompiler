Terminals unused in grammar

    ":"
    "sizeof"
    "in"
    "let"
    "fn"


Grammar

    0 $accept: translation_unit "end of file"

    1 translation_unit: external_declaration
    2                 | translation_unit external_declaration

    3 external_declaration: function_definition
    4                     | enumtype_decl_specifier

    5 expression_end: "NEW_LINE"
    6               | "end of file"

    7 function_definition: function_definition_head expression

    8 function_definition_info: declaration_specifiers declarator

    9 function_definition_head: function_definition_info "="

   10 primary_expression: "integer literal"
   11                   | "string literal"
   12                   | "(" expression ")"

   13 postfix_expression: primary_expression
   14                   | "identifier" "(" argument_expression_list ")"
   15                   | "identifier"

   16 argument_expression_list: assignment_expression
   17                         | argument_expression_list "," assignment_expression
   18                         | ε

   19 unary_expression: postfix_expression
   20                 | unary_operator cast_expression

   21 unary_operator: "&"
   22               | "*"
   23               | "+ or -"
   24               | "!"

   25 cast_expression: unary_expression

   26 multiplicative_expression: cast_expression
   27                          | multiplicative_expression "*" cast_expression
   28                          | multiplicative_expression "/ or %" cast_expression

   29 additive_expression: multiplicative_expression
   30                    | additive_expression "+ or -" multiplicative_expression

   31 relational_expression: additive_expression
   32                      | relational_expression "<, >, <=, or >=" additive_expression

   33 equality_expression: relational_expression
   34                    | equality_expression "== or !=" relational_expression

   35 logical_and_expression: equality_expression
   36                       | logical_and_expression "&&" equality_expression

   37 logical_or_expression: logical_and_expression
   38                      | logical_or_expression "||" logical_and_expression

   39 assignment_expression: logical_or_expression
   40                      | unary_expression assignment_operator assignment_expression

   41 assignment_operator: "="

   42 match_head: "match" "identifier" "->" declaration_specifiers

   43 match_expression: assignment_expression
   44                 | match_binders_list block_end

   45 match_binders_list: match_binders_list_head_start expression_body
   46                   | match_binders_list_head expression_body

   47 match_binders_list_head_start: match_head block_start match_binder_head

   48 match_binders_list_head: match_binders_list match_binder_head

   49 match_binder_head: "|" match_binder_definer "->"

   50 match_binder_definer: "identifier" "(" match_binder_arguments_list ")"
   51                     | "identifier"

   52 match_binder_arguments_list: "identifier"
   53                            | match_binder_arguments_list "," "identifier"

   54 expression_body: match_expression

   55 expression: expression_body expression_end

   56 declaration_specifiers: declaration_specifier
   57                       | declaration_specifier declaration_specifiers

   58 declaration_specifier: type_specifier_qualifier
   59                      | "fip"

   60 type_specifier: "_Bool, char, or int"
   61               | declared_type_name
   62               | typedef_name

   63 declared_type_name: "type" "identifier"

   64 enumtype_decl_head: "type" "identifier"

   65 block_start: "{"
   66            | "{" "NEW_LINE"

   67 block_end: "}"
   68          | "NEW_LINE" "}"

   69 enumtype_decl_specifier: enumtype_decl_head block_start member_types_declaration_list block_end "NEW_LINE"

   70 member_types_declaration_list: member_types_declaration
   71                              | member_types_declaration_list member_types_declaration

   72 member_types_declaration: "identifier" "(" member_declaration_list ")" ";"
   73                         | "identifier" ";"

   74 member_declaration_list: member_declaration
   75                        | member_declaration_list "," member_declaration

   76 member_declaration: specifier_qualifier_list member_declarator

   77 specifier_qualifier_list: type_specifier_qualifier
   78                         | type_specifier_qualifier specifier_qualifier_list

   79 type_specifier_qualifier: type_specifier

   80 member_declarator: declarator

   81 declarator: pointer direct_declarator
   82           | direct_declarator

   83 pointer: "*" pointer
   84        | "*"

   85 direct_declarator: "identifier"
   86                  | function_declarator

   87 function_declarator: direct_declarator "[" parameter_type_list "]"

   88 parameter_type_list: parameter_list
   89                    | ε

   90 parameter_list: parameter_declaration
   91               | parameter_list "," parameter_declaration

   92 parameter_declaration: declaration_specifiers declarator
   93                      | declaration_specifiers

   94 typedef_name: "type identifier"


Terminals, with rules where they appear

    "end of file" (0) 0 6
    error (256)
    "[" (258) 87
    "]" (259) 87
    "(" (260) 12 14 50 72
    ")" (261) 12 14 50 72
    "NEW_LINE" (262) 5 66 68 69
    "->" (263) 42 49
    "," (264) 17 53 75 91
    "&" (265) 21
    "|" (266) 49
    "*" (267) 22 27 83 84
    "+ or -" <cecko::gt_addop> (268) 23 30
    "!" (269) 24
    "/ or %" <cecko::gt_divop> (270) 28
    "<, >, <=, or >=" <cecko::gt_cmpo> (271) 32
    "== or !=" <cecko::gt_cmpe> (272) 34
    "&&" (273) 36
    "||" (274) 38
    "=" (275) 9 41
    ";" (276) 72 73
    ":" (277)
    "{" (278) 65 66
    "}" (279) 67 68
    "type" (280) 63 64
    "_Bool, char, or int" <cecko::gt_etype> (281) 60
    "sizeof" (282)
    "in" (283)
    "let" (284)
    "match" <cecko::match_type> (285) 42
    "fip" (286) 59
    "fn" (287)
    "identifier" <cecko::CIName> (288) 14 15 42 50 51 52 53 63 64 72 73 85
    "type identifier" <cecko::CIName> (289) 94
    "integer literal" <int> (290) 10
    "string literal" <cecko::CIName> (291) 11


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    translation_unit (38)
        on left: 1 2
        on right: 0 2
    external_declaration (39)
        on left: 3 4
        on right: 1 2
    expression_end (40)
        on left: 5 6
        on right: 55
    function_definition (41)
        on left: 7
        on right: 3
    function_definition_info (42)
        on left: 8
        on right: 9
    function_definition_head (43)
        on left: 9
        on right: 7
    primary_expression <casem::InstructionWrapper> (44)
        on left: 10 11 12
        on right: 13
    postfix_expression <casem::InstructionWrapper> (45)
        on left: 13 14 15
        on right: 19
    argument_expression_list <casem::InstructionArray> (46)
        on left: 16 17 18
        on right: 14 17
    unary_expression <casem::InstructionWrapper> (47)
        on left: 19 20
        on right: 25 40
    unary_operator <casem::UnaryOperator> (48)
        on left: 21 22 23 24
        on right: 20
    cast_expression <casem::InstructionWrapper> (49)
        on left: 25
        on right: 20 26 27 28
    multiplicative_expression <casem::InstructionWrapper> (50)
        on left: 26 27 28
        on right: 27 28 29 30
    additive_expression <casem::InstructionWrapper> (51)
        on left: 29 30
        on right: 30 31 32
    relational_expression <casem::InstructionWrapper> (52)
        on left: 31 32
        on right: 32 33 34
    equality_expression <casem::InstructionWrapper> (53)
        on left: 33 34
        on right: 34 35 36
    logical_and_expression <casem::InstructionWrapper> (54)
        on left: 35 36
        on right: 36 37 38
    logical_or_expression <casem::InstructionWrapper> (55)
        on left: 37 38
        on right: 38 39
    assignment_expression <casem::InstructionWrapper> (56)
        on left: 39 40
        on right: 16 17 40 43
    assignment_operator <cecko::gt_cass> (57)
        on left: 41
        on right: 40
    match_head <casem::MatchWrapper> (58)
        on left: 42
        on right: 47
    match_expression <casem::InstructionWrapper> (59)
        on left: 43 44
        on right: 54
    match_binders_list <casem::MatchWrapper> (60)
        on left: 45 46
        on right: 44 48
    match_binders_list_head_start <casem::MatchBinderListHeadData> (61)
        on left: 47
        on right: 45
    match_binders_list_head <casem::MatchBinderListHeadData> (62)
        on left: 48
        on right: 46
    match_binder_head <casem::MatchBinderChackerData> (63)
        on left: 49
        on right: 47 48
    match_binder_definer <casem::MatchBinderChackerData> (64)
        on left: 50 51
        on right: 49
    match_binder_arguments_list <std::vector<cecko::CIName>> (65)
        on left: 52 53
        on right: 50 53
    expression_body <casem::InstructionWrapper> (66)
        on left: 54
        on right: 45 46 55
    expression <casem::InstructionWrapper> (67)
        on left: 55
        on right: 7 12
    declaration_specifiers <casem::CKTypeRefDefPack> (68)
        on left: 56 57
        on right: 8 42 57 92 93
    declaration_specifier <casem::CKTypeRefDefPack> (69)
        on left: 58 59
        on right: 56 57
    type_specifier <cecko::CKTypeSafeObs> (70)
        on left: 60 61 62
        on right: 79
    declared_type_name <cecko::CIName> (71)
        on left: 63
        on right: 61
    enumtype_decl_head <casem::TaggedTypeDecl> (72)
        on left: 64
        on right: 69
    block_start (73)
        on left: 65 66
        on right: 47 69
    block_end (74)
        on left: 67 68
        on right: 44 69
    enumtype_decl_specifier <cecko::CKStructTypeSafeObs> (75)
        on left: 69
        on right: 4
    member_types_declaration_list <casem::StructObservers> (76)
        on left: 70 71
        on right: 69 71
    member_types_declaration <cecko::CKStructTypeSafeObs> (77)
        on left: 72 73
        on right: 70 71
    member_declaration_list <cecko::CKStructItemArray> (78)
        on left: 74 75
        on right: 72 75
    member_declaration <cecko::CKStructItemArray> (79)
        on left: 76
        on right: 74 75
    specifier_qualifier_list <casem::CKTypeRefDefPack> (80)
        on left: 77 78
        on right: 76 78
    type_specifier_qualifier <casem::CKTypeRefDefPack> (81)
        on left: 79
        on right: 58 77 78
    member_declarator <casem::TypeRefPack_Action> (82)
        on left: 80
        on right: 76
    declarator <casem::TypeRefPack_Action> (83)
        on left: 81 82
        on right: 8 80 92
    pointer <casem::TypeRefPack_Convertor> (84)
        on left: 83 84
        on right: 81 83
    direct_declarator <casem::TypeRefPack_Action> (85)
        on left: 85 86
        on right: 81 82 87
    function_declarator <casem::TypeRefPack_Action> (86)
        on left: 87
        on right: 86
    parameter_type_list <casem::TRDArray> (87)
        on left: 88 89
        on right: 87
    parameter_list <casem::TRDArray> (88)
        on left: 90 91
        on right: 88 91
    parameter_declaration <casem::CKTypeRefDefPack> (89)
        on left: 92 93
        on right: 90 91
    typedef_name <cecko::CIName> (90)
        on left: 94
        on right: 62


State 0

    0 $accept: • translation_unit "end of file"

    "type"                 shift, and go to state 1
    "_Bool, char, or int"  shift, and go to state 2
    "fip"                  shift, and go to state 3
    "type identifier"      shift, and go to state 4

    translation_unit          go to state 5
    external_declaration      go to state 6
    function_definition       go to state 7
    function_definition_info  go to state 8
    function_definition_head  go to state 9
    declaration_specifiers    go to state 10
    declaration_specifier     go to state 11
    type_specifier            go to state 12
    declared_type_name        go to state 13
    enumtype_decl_head        go to state 14
    enumtype_decl_specifier   go to state 15
    type_specifier_qualifier  go to state 16
    typedef_name              go to state 17


State 1

   63 declared_type_name: "type" • "identifier"
   64 enumtype_decl_head: "type" • "identifier"

    "identifier"  shift, and go to state 18


State 2

   60 type_specifier: "_Bool, char, or int" •

    $default  reduce using rule 60 (type_specifier)


State 3

   59 declaration_specifier: "fip" •

    $default  reduce using rule 59 (declaration_specifier)


State 4

   94 typedef_name: "type identifier" •

    $default  reduce using rule 94 (typedef_name)


State 5

    0 $accept: translation_unit • "end of file"
    2 translation_unit: translation_unit • external_declaration

    "end of file"          shift, and go to state 19
    "type"                 shift, and go to state 1
    "_Bool, char, or int"  shift, and go to state 2
    "fip"                  shift, and go to state 3
    "type identifier"      shift, and go to state 4

    external_declaration      go to state 20
    function_definition       go to state 7
    function_definition_info  go to state 8
    function_definition_head  go to state 9
    declaration_specifiers    go to state 10
    declaration_specifier     go to state 11
    type_specifier            go to state 12
    declared_type_name        go to state 13
    enumtype_decl_head        go to state 14
    enumtype_decl_specifier   go to state 15
    type_specifier_qualifier  go to state 16
    typedef_name              go to state 17


State 6

    1 translation_unit: external_declaration •

    $default  reduce using rule 1 (translation_unit)


State 7

    3 external_declaration: function_definition •

    $default  reduce using rule 3 (external_declaration)


State 8

    9 function_definition_head: function_definition_info • "="

    "="  shift, and go to state 21


State 9

    7 function_definition: function_definition_head • expression

    "("                shift, and go to state 22
    "&"                shift, and go to state 23
    "*"                shift, and go to state 24
    "+ or -"           shift, and go to state 25
    "!"                shift, and go to state 26
    "match"            shift, and go to state 27
    "identifier"       shift, and go to state 28
    "integer literal"  shift, and go to state 29
    "string literal"   shift, and go to state 30

    primary_expression             go to state 31
    postfix_expression             go to state 32
    unary_expression               go to state 33
    unary_operator                 go to state 34
    cast_expression                go to state 35
    multiplicative_expression      go to state 36
    additive_expression            go to state 37
    relational_expression          go to state 38
    equality_expression            go to state 39
    logical_and_expression         go to state 40
    logical_or_expression          go to state 41
    assignment_expression          go to state 42
    match_head                     go to state 43
    match_expression               go to state 44
    match_binders_list             go to state 45
    match_binders_list_head_start  go to state 46
    match_binders_list_head        go to state 47
    expression_body                go to state 48
    expression                     go to state 49


State 10

    8 function_definition_info: declaration_specifiers • declarator

    "*"           shift, and go to state 50
    "identifier"  shift, and go to state 51

    declarator           go to state 52
    pointer              go to state 53
    direct_declarator    go to state 54
    function_declarator  go to state 55


State 11

   56 declaration_specifiers: declaration_specifier •
   57                       | declaration_specifier • declaration_specifiers

    "type"                 shift, and go to state 56
    "_Bool, char, or int"  shift, and go to state 2
    "fip"                  shift, and go to state 3
    "type identifier"      shift, and go to state 4

    $default  reduce using rule 56 (declaration_specifiers)

    declaration_specifiers    go to state 57
    declaration_specifier     go to state 11
    type_specifier            go to state 12
    declared_type_name        go to state 13
    type_specifier_qualifier  go to state 16
    typedef_name              go to state 17


State 12

   79 type_specifier_qualifier: type_specifier •

    $default  reduce using rule 79 (type_specifier_qualifier)


State 13

   61 type_specifier: declared_type_name •

    $default  reduce using rule 61 (type_specifier)


State 14

   69 enumtype_decl_specifier: enumtype_decl_head • block_start member_types_declaration_list block_end "NEW_LINE"

    "{"  shift, and go to state 58

    block_start  go to state 59


State 15

    4 external_declaration: enumtype_decl_specifier •

    $default  reduce using rule 4 (external_declaration)


State 16

   58 declaration_specifier: type_specifier_qualifier •

    $default  reduce using rule 58 (declaration_specifier)


State 17

   62 type_specifier: typedef_name •

    $default  reduce using rule 62 (type_specifier)


State 18

   63 declared_type_name: "type" "identifier" •
   64 enumtype_decl_head: "type" "identifier" •

    "{"       reduce using rule 64 (enumtype_decl_head)
    $default  reduce using rule 63 (declared_type_name)


State 19

    0 $accept: translation_unit "end of file" •

    $default  accept


State 20

    2 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 2 (translation_unit)


State 21

    9 function_definition_head: function_definition_info "=" •

    $default  reduce using rule 9 (function_definition_head)


State 22

   12 primary_expression: "(" • expression ")"

    "("                shift, and go to state 22
    "&"                shift, and go to state 23
    "*"                shift, and go to state 24
    "+ or -"           shift, and go to state 25
    "!"                shift, and go to state 26
    "match"            shift, and go to state 27
    "identifier"       shift, and go to state 28
    "integer literal"  shift, and go to state 29
    "string literal"   shift, and go to state 30

    primary_expression             go to state 31
    postfix_expression             go to state 32
    unary_expression               go to state 33
    unary_operator                 go to state 34
    cast_expression                go to state 35
    multiplicative_expression      go to state 36
    additive_expression            go to state 37
    relational_expression          go to state 38
    equality_expression            go to state 39
    logical_and_expression         go to state 40
    logical_or_expression          go to state 41
    assignment_expression          go to state 42
    match_head                     go to state 43
    match_expression               go to state 44
    match_binders_list             go to state 45
    match_binders_list_head_start  go to state 46
    match_binders_list_head        go to state 47
    expression_body                go to state 48
    expression                     go to state 60


State 23

   21 unary_operator: "&" •

    $default  reduce using rule 21 (unary_operator)


State 24

   22 unary_operator: "*" •

    $default  reduce using rule 22 (unary_operator)


State 25

   23 unary_operator: "+ or -" •

    $default  reduce using rule 23 (unary_operator)


State 26

   24 unary_operator: "!" •

    $default  reduce using rule 24 (unary_operator)


State 27

   42 match_head: "match" • "identifier" "->" declaration_specifiers

    "identifier"  shift, and go to state 61


State 28

   14 postfix_expression: "identifier" • "(" argument_expression_list ")"
   15                   | "identifier" •

    "("  shift, and go to state 62

    $default  reduce using rule 15 (postfix_expression)


State 29

   10 primary_expression: "integer literal" •

    $default  reduce using rule 10 (primary_expression)


State 30

   11 primary_expression: "string literal" •

    $default  reduce using rule 11 (primary_expression)


State 31

   13 postfix_expression: primary_expression •

    $default  reduce using rule 13 (postfix_expression)


State 32

   19 unary_expression: postfix_expression •

    $default  reduce using rule 19 (unary_expression)


State 33

   25 cast_expression: unary_expression •
   40 assignment_expression: unary_expression • assignment_operator assignment_expression

    "="  shift, and go to state 63

    $default  reduce using rule 25 (cast_expression)

    assignment_operator  go to state 64


State 34

   20 unary_expression: unary_operator • cast_expression

    "("                shift, and go to state 22
    "&"                shift, and go to state 23
    "*"                shift, and go to state 24
    "+ or -"           shift, and go to state 25
    "!"                shift, and go to state 26
    "identifier"       shift, and go to state 28
    "integer literal"  shift, and go to state 29
    "string literal"   shift, and go to state 30

    primary_expression  go to state 31
    postfix_expression  go to state 32
    unary_expression    go to state 65
    unary_operator      go to state 34
    cast_expression     go to state 66


State 35

   26 multiplicative_expression: cast_expression •

    $default  reduce using rule 26 (multiplicative_expression)


State 36

   27 multiplicative_expression: multiplicative_expression • "*" cast_expression
   28                          | multiplicative_expression • "/ or %" cast_expression
   29 additive_expression: multiplicative_expression •

    "*"       shift, and go to state 67
    "/ or %"  shift, and go to state 68

    $default  reduce using rule 29 (additive_expression)


State 37

   30 additive_expression: additive_expression • "+ or -" multiplicative_expression
   31 relational_expression: additive_expression •

    "+ or -"  shift, and go to state 69

    $default  reduce using rule 31 (relational_expression)


State 38

   32 relational_expression: relational_expression • "<, >, <=, or >=" additive_expression
   33 equality_expression: relational_expression •

    "<, >, <=, or >="  shift, and go to state 70

    $default  reduce using rule 33 (equality_expression)


State 39

   34 equality_expression: equality_expression • "== or !=" relational_expression
   35 logical_and_expression: equality_expression •

    "== or !="  shift, and go to state 71

    $default  reduce using rule 35 (logical_and_expression)


State 40

   36 logical_and_expression: logical_and_expression • "&&" equality_expression
   37 logical_or_expression: logical_and_expression •

    "&&"  shift, and go to state 72

    $default  reduce using rule 37 (logical_or_expression)


State 41

   38 logical_or_expression: logical_or_expression • "||" logical_and_expression
   39 assignment_expression: logical_or_expression •

    "||"  shift, and go to state 73

    $default  reduce using rule 39 (assignment_expression)


State 42

   43 match_expression: assignment_expression •

    $default  reduce using rule 43 (match_expression)


State 43

   47 match_binders_list_head_start: match_head • block_start match_binder_head

    "{"  shift, and go to state 58

    block_start  go to state 74


State 44

   54 expression_body: match_expression •

    $default  reduce using rule 54 (expression_body)


State 45

   44 match_expression: match_binders_list • block_end
   48 match_binders_list_head: match_binders_list • match_binder_head

    "NEW_LINE"  shift, and go to state 75
    "|"         shift, and go to state 76
    "}"         shift, and go to state 77

    match_binder_head  go to state 78
    block_end          go to state 79


State 46

   45 match_binders_list: match_binders_list_head_start • expression_body

    "("                shift, and go to state 22
    "&"                shift, and go to state 23
    "*"                shift, and go to state 24
    "+ or -"           shift, and go to state 25
    "!"                shift, and go to state 26
    "match"            shift, and go to state 27
    "identifier"       shift, and go to state 28
    "integer literal"  shift, and go to state 29
    "string literal"   shift, and go to state 30

    primary_expression             go to state 31
    postfix_expression             go to state 32
    unary_expression               go to state 33
    unary_operator                 go to state 34
    cast_expression                go to state 35
    multiplicative_expression      go to state 36
    additive_expression            go to state 37
    relational_expression          go to state 38
    equality_expression            go to state 39
    logical_and_expression         go to state 40
    logical_or_expression          go to state 41
    assignment_expression          go to state 42
    match_head                     go to state 43
    match_expression               go to state 44
    match_binders_list             go to state 45
    match_binders_list_head_start  go to state 46
    match_binders_list_head        go to state 47
    expression_body                go to state 80


State 47

   46 match_binders_list: match_binders_list_head • expression_body

    "("                shift, and go to state 22
    "&"                shift, and go to state 23
    "*"                shift, and go to state 24
    "+ or -"           shift, and go to state 25
    "!"                shift, and go to state 26
    "match"            shift, and go to state 27
    "identifier"       shift, and go to state 28
    "integer literal"  shift, and go to state 29
    "string literal"   shift, and go to state 30

    primary_expression             go to state 31
    postfix_expression             go to state 32
    unary_expression               go to state 33
    unary_operator                 go to state 34
    cast_expression                go to state 35
    multiplicative_expression      go to state 36
    additive_expression            go to state 37
    relational_expression          go to state 38
    equality_expression            go to state 39
    logical_and_expression         go to state 40
    logical_or_expression          go to state 41
    assignment_expression          go to state 42
    match_head                     go to state 43
    match_expression               go to state 44
    match_binders_list             go to state 45
    match_binders_list_head_start  go to state 46
    match_binders_list_head        go to state 47
    expression_body                go to state 81


State 48

   55 expression: expression_body • expression_end

    "end of file"  shift, and go to state 82
    "NEW_LINE"     shift, and go to state 83

    expression_end  go to state 84


State 49

    7 function_definition: function_definition_head expression •

    $default  reduce using rule 7 (function_definition)


State 50

   83 pointer: "*" • pointer
   84        | "*" •

    "*"  shift, and go to state 50

    $default  reduce using rule 84 (pointer)

    pointer  go to state 85


State 51

   85 direct_declarator: "identifier" •

    $default  reduce using rule 85 (direct_declarator)


State 52

    8 function_definition_info: declaration_specifiers declarator •

    $default  reduce using rule 8 (function_definition_info)


State 53

   81 declarator: pointer • direct_declarator

    "identifier"  shift, and go to state 51

    direct_declarator    go to state 86
    function_declarator  go to state 55


State 54

   82 declarator: direct_declarator •
   87 function_declarator: direct_declarator • "[" parameter_type_list "]"

    "["  shift, and go to state 87

    $default  reduce using rule 82 (declarator)


State 55

   86 direct_declarator: function_declarator •

    $default  reduce using rule 86 (direct_declarator)


State 56

   63 declared_type_name: "type" • "identifier"

    "identifier"  shift, and go to state 88


State 57

   57 declaration_specifiers: declaration_specifier declaration_specifiers •

    $default  reduce using rule 57 (declaration_specifiers)


State 58

   65 block_start: "{" •
   66            | "{" • "NEW_LINE"

    "NEW_LINE"  shift, and go to state 89

    $default  reduce using rule 65 (block_start)


State 59

   69 enumtype_decl_specifier: enumtype_decl_head block_start • member_types_declaration_list block_end "NEW_LINE"

    "identifier"  shift, and go to state 90

    member_types_declaration_list  go to state 91
    member_types_declaration       go to state 92


State 60

   12 primary_expression: "(" expression • ")"

    ")"  shift, and go to state 93


State 61

   42 match_head: "match" "identifier" • "->" declaration_specifiers

    "->"  shift, and go to state 94


State 62

   14 postfix_expression: "identifier" "(" • argument_expression_list ")"

    "("                shift, and go to state 22
    "&"                shift, and go to state 23
    "*"                shift, and go to state 24
    "+ or -"           shift, and go to state 25
    "!"                shift, and go to state 26
    "identifier"       shift, and go to state 28
    "integer literal"  shift, and go to state 29
    "string literal"   shift, and go to state 30

    $default  reduce using rule 18 (argument_expression_list)

    primary_expression         go to state 31
    postfix_expression         go to state 32
    argument_expression_list   go to state 95
    unary_expression           go to state 33
    unary_operator             go to state 34
    cast_expression            go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 39
    logical_and_expression     go to state 40
    logical_or_expression      go to state 41
    assignment_expression      go to state 96


State 63

   41 assignment_operator: "=" •

    $default  reduce using rule 41 (assignment_operator)


State 64

   40 assignment_expression: unary_expression assignment_operator • assignment_expression

    "("                shift, and go to state 22
    "&"                shift, and go to state 23
    "*"                shift, and go to state 24
    "+ or -"           shift, and go to state 25
    "!"                shift, and go to state 26
    "identifier"       shift, and go to state 28
    "integer literal"  shift, and go to state 29
    "string literal"   shift, and go to state 30

    primary_expression         go to state 31
    postfix_expression         go to state 32
    unary_expression           go to state 33
    unary_operator             go to state 34
    cast_expression            go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 39
    logical_and_expression     go to state 40
    logical_or_expression      go to state 41
    assignment_expression      go to state 97


State 65

   25 cast_expression: unary_expression •

    $default  reduce using rule 25 (cast_expression)


State 66

   20 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 20 (unary_expression)


State 67

   27 multiplicative_expression: multiplicative_expression "*" • cast_expression

    "("                shift, and go to state 22
    "&"                shift, and go to state 23
    "*"                shift, and go to state 24
    "+ or -"           shift, and go to state 25
    "!"                shift, and go to state 26
    "identifier"       shift, and go to state 28
    "integer literal"  shift, and go to state 29
    "string literal"   shift, and go to state 30

    primary_expression  go to state 31
    postfix_expression  go to state 32
    unary_expression    go to state 65
    unary_operator      go to state 34
    cast_expression     go to state 98


State 68

   28 multiplicative_expression: multiplicative_expression "/ or %" • cast_expression

    "("                shift, and go to state 22
    "&"                shift, and go to state 23
    "*"                shift, and go to state 24
    "+ or -"           shift, and go to state 25
    "!"                shift, and go to state 26
    "identifier"       shift, and go to state 28
    "integer literal"  shift, and go to state 29
    "string literal"   shift, and go to state 30

    primary_expression  go to state 31
    postfix_expression  go to state 32
    unary_expression    go to state 65
    unary_operator      go to state 34
    cast_expression     go to state 99


State 69

   30 additive_expression: additive_expression "+ or -" • multiplicative_expression

    "("                shift, and go to state 22
    "&"                shift, and go to state 23
    "*"                shift, and go to state 24
    "+ or -"           shift, and go to state 25
    "!"                shift, and go to state 26
    "identifier"       shift, and go to state 28
    "integer literal"  shift, and go to state 29
    "string literal"   shift, and go to state 30

    primary_expression         go to state 31
    postfix_expression         go to state 32
    unary_expression           go to state 65
    unary_operator             go to state 34
    cast_expression            go to state 35
    multiplicative_expression  go to state 100


State 70

   32 relational_expression: relational_expression "<, >, <=, or >=" • additive_expression

    "("                shift, and go to state 22
    "&"                shift, and go to state 23
    "*"                shift, and go to state 24
    "+ or -"           shift, and go to state 25
    "!"                shift, and go to state 26
    "identifier"       shift, and go to state 28
    "integer literal"  shift, and go to state 29
    "string literal"   shift, and go to state 30

    primary_expression         go to state 31
    postfix_expression         go to state 32
    unary_expression           go to state 65
    unary_operator             go to state 34
    cast_expression            go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 101


State 71

   34 equality_expression: equality_expression "== or !=" • relational_expression

    "("                shift, and go to state 22
    "&"                shift, and go to state 23
    "*"                shift, and go to state 24
    "+ or -"           shift, and go to state 25
    "!"                shift, and go to state 26
    "identifier"       shift, and go to state 28
    "integer literal"  shift, and go to state 29
    "string literal"   shift, and go to state 30

    primary_expression         go to state 31
    postfix_expression         go to state 32
    unary_expression           go to state 65
    unary_operator             go to state 34
    cast_expression            go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 102


State 72

   36 logical_and_expression: logical_and_expression "&&" • equality_expression

    "("                shift, and go to state 22
    "&"                shift, and go to state 23
    "*"                shift, and go to state 24
    "+ or -"           shift, and go to state 25
    "!"                shift, and go to state 26
    "identifier"       shift, and go to state 28
    "integer literal"  shift, and go to state 29
    "string literal"   shift, and go to state 30

    primary_expression         go to state 31
    postfix_expression         go to state 32
    unary_expression           go to state 65
    unary_operator             go to state 34
    cast_expression            go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 103


State 73

   38 logical_or_expression: logical_or_expression "||" • logical_and_expression

    "("                shift, and go to state 22
    "&"                shift, and go to state 23
    "*"                shift, and go to state 24
    "+ or -"           shift, and go to state 25
    "!"                shift, and go to state 26
    "identifier"       shift, and go to state 28
    "integer literal"  shift, and go to state 29
    "string literal"   shift, and go to state 30

    primary_expression         go to state 31
    postfix_expression         go to state 32
    unary_expression           go to state 65
    unary_operator             go to state 34
    cast_expression            go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 39
    logical_and_expression     go to state 104


State 74

   47 match_binders_list_head_start: match_head block_start • match_binder_head

    "|"  shift, and go to state 76

    match_binder_head  go to state 105


State 75

   68 block_end: "NEW_LINE" • "}"

    "}"  shift, and go to state 106


State 76

   49 match_binder_head: "|" • match_binder_definer "->"

    "identifier"  shift, and go to state 107

    match_binder_definer  go to state 108


State 77

   67 block_end: "}" •

    $default  reduce using rule 67 (block_end)


State 78

   48 match_binders_list_head: match_binders_list match_binder_head •

    $default  reduce using rule 48 (match_binders_list_head)


State 79

   44 match_expression: match_binders_list block_end •

    $default  reduce using rule 44 (match_expression)


State 80

   45 match_binders_list: match_binders_list_head_start expression_body •

    $default  reduce using rule 45 (match_binders_list)


State 81

   46 match_binders_list: match_binders_list_head expression_body •

    $default  reduce using rule 46 (match_binders_list)


State 82

    6 expression_end: "end of file" •

    $default  reduce using rule 6 (expression_end)


State 83

    5 expression_end: "NEW_LINE" •

    $default  reduce using rule 5 (expression_end)


State 84

   55 expression: expression_body expression_end •

    $default  reduce using rule 55 (expression)


State 85

   83 pointer: "*" pointer •

    $default  reduce using rule 83 (pointer)


State 86

   81 declarator: pointer direct_declarator •
   87 function_declarator: direct_declarator • "[" parameter_type_list "]"

    "["  shift, and go to state 87

    $default  reduce using rule 81 (declarator)


State 87

   87 function_declarator: direct_declarator "[" • parameter_type_list "]"

    "type"                 shift, and go to state 56
    "_Bool, char, or int"  shift, and go to state 2
    "fip"                  shift, and go to state 3
    "type identifier"      shift, and go to state 4

    $default  reduce using rule 89 (parameter_type_list)

    declaration_specifiers    go to state 109
    declaration_specifier     go to state 11
    type_specifier            go to state 12
    declared_type_name        go to state 13
    type_specifier_qualifier  go to state 16
    parameter_type_list       go to state 110
    parameter_list            go to state 111
    parameter_declaration     go to state 112
    typedef_name              go to state 17


State 88

   63 declared_type_name: "type" "identifier" •

    $default  reduce using rule 63 (declared_type_name)


State 89

   66 block_start: "{" "NEW_LINE" •

    $default  reduce using rule 66 (block_start)


State 90

   72 member_types_declaration: "identifier" • "(" member_declaration_list ")" ";"
   73                         | "identifier" • ";"

    "("  shift, and go to state 113
    ";"  shift, and go to state 114


State 91

   69 enumtype_decl_specifier: enumtype_decl_head block_start member_types_declaration_list • block_end "NEW_LINE"
   71 member_types_declaration_list: member_types_declaration_list • member_types_declaration

    "NEW_LINE"    shift, and go to state 75
    "}"           shift, and go to state 77
    "identifier"  shift, and go to state 90

    block_end                 go to state 115
    member_types_declaration  go to state 116


State 92

   70 member_types_declaration_list: member_types_declaration •

    $default  reduce using rule 70 (member_types_declaration_list)


State 93

   12 primary_expression: "(" expression ")" •

    $default  reduce using rule 12 (primary_expression)


State 94

   42 match_head: "match" "identifier" "->" • declaration_specifiers

    "type"                 shift, and go to state 56
    "_Bool, char, or int"  shift, and go to state 2
    "fip"                  shift, and go to state 3
    "type identifier"      shift, and go to state 4

    declaration_specifiers    go to state 117
    declaration_specifier     go to state 11
    type_specifier            go to state 12
    declared_type_name        go to state 13
    type_specifier_qualifier  go to state 16
    typedef_name              go to state 17


State 95

   14 postfix_expression: "identifier" "(" argument_expression_list • ")"
   17 argument_expression_list: argument_expression_list • "," assignment_expression

    ")"  shift, and go to state 118
    ","  shift, and go to state 119


State 96

   16 argument_expression_list: assignment_expression •

    $default  reduce using rule 16 (argument_expression_list)


State 97

   40 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 40 (assignment_expression)


State 98

   27 multiplicative_expression: multiplicative_expression "*" cast_expression •

    $default  reduce using rule 27 (multiplicative_expression)


State 99

   28 multiplicative_expression: multiplicative_expression "/ or %" cast_expression •

    $default  reduce using rule 28 (multiplicative_expression)


State 100

   27 multiplicative_expression: multiplicative_expression • "*" cast_expression
   28                          | multiplicative_expression • "/ or %" cast_expression
   30 additive_expression: additive_expression "+ or -" multiplicative_expression •

    "*"       shift, and go to state 67
    "/ or %"  shift, and go to state 68

    $default  reduce using rule 30 (additive_expression)


State 101

   30 additive_expression: additive_expression • "+ or -" multiplicative_expression
   32 relational_expression: relational_expression "<, >, <=, or >=" additive_expression •

    "+ or -"  shift, and go to state 69

    $default  reduce using rule 32 (relational_expression)


State 102

   32 relational_expression: relational_expression • "<, >, <=, or >=" additive_expression
   34 equality_expression: equality_expression "== or !=" relational_expression •

    "<, >, <=, or >="  shift, and go to state 70

    $default  reduce using rule 34 (equality_expression)


State 103

   34 equality_expression: equality_expression • "== or !=" relational_expression
   36 logical_and_expression: logical_and_expression "&&" equality_expression •

    "== or !="  shift, and go to state 71

    $default  reduce using rule 36 (logical_and_expression)


State 104

   36 logical_and_expression: logical_and_expression • "&&" equality_expression
   38 logical_or_expression: logical_or_expression "||" logical_and_expression •

    "&&"  shift, and go to state 72

    $default  reduce using rule 38 (logical_or_expression)


State 105

   47 match_binders_list_head_start: match_head block_start match_binder_head •

    $default  reduce using rule 47 (match_binders_list_head_start)


State 106

   68 block_end: "NEW_LINE" "}" •

    $default  reduce using rule 68 (block_end)


State 107

   50 match_binder_definer: "identifier" • "(" match_binder_arguments_list ")"
   51                     | "identifier" •

    "("  shift, and go to state 120

    $default  reduce using rule 51 (match_binder_definer)


State 108

   49 match_binder_head: "|" match_binder_definer • "->"

    "->"  shift, and go to state 121


State 109

   92 parameter_declaration: declaration_specifiers • declarator
   93                      | declaration_specifiers •

    "*"           shift, and go to state 50
    "identifier"  shift, and go to state 51

    $default  reduce using rule 93 (parameter_declaration)

    declarator           go to state 122
    pointer              go to state 53
    direct_declarator    go to state 54
    function_declarator  go to state 55


State 110

   87 function_declarator: direct_declarator "[" parameter_type_list • "]"

    "]"  shift, and go to state 123


State 111

   88 parameter_type_list: parameter_list •
   91 parameter_list: parameter_list • "," parameter_declaration

    ","  shift, and go to state 124

    $default  reduce using rule 88 (parameter_type_list)


State 112

   90 parameter_list: parameter_declaration •

    $default  reduce using rule 90 (parameter_list)


State 113

   72 member_types_declaration: "identifier" "(" • member_declaration_list ")" ";"

    "type"                 shift, and go to state 56
    "_Bool, char, or int"  shift, and go to state 2
    "type identifier"      shift, and go to state 4

    type_specifier            go to state 12
    declared_type_name        go to state 13
    member_declaration_list   go to state 125
    member_declaration        go to state 126
    specifier_qualifier_list  go to state 127
    type_specifier_qualifier  go to state 128
    typedef_name              go to state 17


State 114

   73 member_types_declaration: "identifier" ";" •

    $default  reduce using rule 73 (member_types_declaration)


State 115

   69 enumtype_decl_specifier: enumtype_decl_head block_start member_types_declaration_list block_end • "NEW_LINE"

    "NEW_LINE"  shift, and go to state 129


State 116

   71 member_types_declaration_list: member_types_declaration_list member_types_declaration •

    $default  reduce using rule 71 (member_types_declaration_list)


State 117

   42 match_head: "match" "identifier" "->" declaration_specifiers •

    $default  reduce using rule 42 (match_head)


State 118

   14 postfix_expression: "identifier" "(" argument_expression_list ")" •

    $default  reduce using rule 14 (postfix_expression)


State 119

   17 argument_expression_list: argument_expression_list "," • assignment_expression

    "("                shift, and go to state 22
    "&"                shift, and go to state 23
    "*"                shift, and go to state 24
    "+ or -"           shift, and go to state 25
    "!"                shift, and go to state 26
    "identifier"       shift, and go to state 28
    "integer literal"  shift, and go to state 29
    "string literal"   shift, and go to state 30

    primary_expression         go to state 31
    postfix_expression         go to state 32
    unary_expression           go to state 33
    unary_operator             go to state 34
    cast_expression            go to state 35
    multiplicative_expression  go to state 36
    additive_expression        go to state 37
    relational_expression      go to state 38
    equality_expression        go to state 39
    logical_and_expression     go to state 40
    logical_or_expression      go to state 41
    assignment_expression      go to state 130


State 120

   50 match_binder_definer: "identifier" "(" • match_binder_arguments_list ")"

    "identifier"  shift, and go to state 131

    match_binder_arguments_list  go to state 132


State 121

   49 match_binder_head: "|" match_binder_definer "->" •

    $default  reduce using rule 49 (match_binder_head)


State 122

   92 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 92 (parameter_declaration)


State 123

   87 function_declarator: direct_declarator "[" parameter_type_list "]" •

    $default  reduce using rule 87 (function_declarator)


State 124

   91 parameter_list: parameter_list "," • parameter_declaration

    "type"                 shift, and go to state 56
    "_Bool, char, or int"  shift, and go to state 2
    "fip"                  shift, and go to state 3
    "type identifier"      shift, and go to state 4

    declaration_specifiers    go to state 109
    declaration_specifier     go to state 11
    type_specifier            go to state 12
    declared_type_name        go to state 13
    type_specifier_qualifier  go to state 16
    parameter_declaration     go to state 133
    typedef_name              go to state 17


State 125

   72 member_types_declaration: "identifier" "(" member_declaration_list • ")" ";"
   75 member_declaration_list: member_declaration_list • "," member_declaration

    ")"  shift, and go to state 134
    ","  shift, and go to state 135


State 126

   74 member_declaration_list: member_declaration •

    $default  reduce using rule 74 (member_declaration_list)


State 127

   76 member_declaration: specifier_qualifier_list • member_declarator

    "*"           shift, and go to state 50
    "identifier"  shift, and go to state 51

    member_declarator    go to state 136
    declarator           go to state 137
    pointer              go to state 53
    direct_declarator    go to state 54
    function_declarator  go to state 55


State 128

   77 specifier_qualifier_list: type_specifier_qualifier •
   78                         | type_specifier_qualifier • specifier_qualifier_list

    "type"                 shift, and go to state 56
    "_Bool, char, or int"  shift, and go to state 2
    "type identifier"      shift, and go to state 4

    $default  reduce using rule 77 (specifier_qualifier_list)

    type_specifier            go to state 12
    declared_type_name        go to state 13
    specifier_qualifier_list  go to state 138
    type_specifier_qualifier  go to state 128
    typedef_name              go to state 17


State 129

   69 enumtype_decl_specifier: enumtype_decl_head block_start member_types_declaration_list block_end "NEW_LINE" •

    $default  reduce using rule 69 (enumtype_decl_specifier)


State 130

   17 argument_expression_list: argument_expression_list "," assignment_expression •

    $default  reduce using rule 17 (argument_expression_list)


State 131

   52 match_binder_arguments_list: "identifier" •

    $default  reduce using rule 52 (match_binder_arguments_list)


State 132

   50 match_binder_definer: "identifier" "(" match_binder_arguments_list • ")"
   53 match_binder_arguments_list: match_binder_arguments_list • "," "identifier"

    ")"  shift, and go to state 139
    ","  shift, and go to state 140


State 133

   91 parameter_list: parameter_list "," parameter_declaration •

    $default  reduce using rule 91 (parameter_list)


State 134

   72 member_types_declaration: "identifier" "(" member_declaration_list ")" • ";"

    ";"  shift, and go to state 141


State 135

   75 member_declaration_list: member_declaration_list "," • member_declaration

    "type"                 shift, and go to state 56
    "_Bool, char, or int"  shift, and go to state 2
    "type identifier"      shift, and go to state 4

    type_specifier            go to state 12
    declared_type_name        go to state 13
    member_declaration        go to state 142
    specifier_qualifier_list  go to state 127
    type_specifier_qualifier  go to state 128
    typedef_name              go to state 17


State 136

   76 member_declaration: specifier_qualifier_list member_declarator •

    $default  reduce using rule 76 (member_declaration)


State 137

   80 member_declarator: declarator •

    $default  reduce using rule 80 (member_declarator)


State 138

   78 specifier_qualifier_list: type_specifier_qualifier specifier_qualifier_list •

    $default  reduce using rule 78 (specifier_qualifier_list)


State 139

   50 match_binder_definer: "identifier" "(" match_binder_arguments_list ")" •

    $default  reduce using rule 50 (match_binder_definer)


State 140

   53 match_binder_arguments_list: match_binder_arguments_list "," • "identifier"

    "identifier"  shift, and go to state 143


State 141

   72 member_types_declaration: "identifier" "(" member_declaration_list ")" ";" •

    $default  reduce using rule 72 (member_types_declaration)


State 142

   75 member_declaration_list: member_declaration_list "," member_declaration •

    $default  reduce using rule 75 (member_declaration_list)


State 143

   53 match_binder_arguments_list: match_binder_arguments_list "," "identifier" •

    $default  reduce using rule 53 (match_binder_arguments_list)
