Terminals unused in grammar

    ":"
    "sizeof"
    "in"
    "let"
    "fip"
    "fn"


Grammar

    0 $accept: translation_unit "end of file"

    1 translation_unit: external_declaration
    2                 | translation_unit external_declaration

    3 external_declaration: function_definition
    4                     | enumtype_decl_specifier

    5 expression_end: "NEW_LINE"
    6               | "end of file"

    7 function_definition: function_definition_head expression

    8 function_definition_info: declaration_specifiers declarator

    9 function_definition_head: function_definition_info "="

   10 primary_expression: enumeration_constant
   11                   | "integer literal"
   12                   | "string literal"
   13                   | "(" expression ")"

   14 postfix_expression: primary_expression
   15                   | "identifier" "(" argument_expression_list ")"

   16 argument_expression_list: assignment_expression
   17                         | assignment_expression "," argument_expression_list

   18 unary_expression: postfix_expression
   19                 | unary_operator cast_expression

   20 unary_operator: "&"
   21               | "*"
   22               | "+ or -"
   23               | "!"

   24 cast_expression: unary_expression

   25 multiplicative_expression: cast_expression
   26                          | multiplicative_expression "*" cast_expression
   27                          | multiplicative_expression "/ or %" cast_expression

   28 additive_expression: multiplicative_expression
   29                    | additive_expression "+ or -" multiplicative_expression

   30 relational_expression: additive_expression
   31                      | relational_expression "<, >, <=, or >=" additive_expression

   32 equality_expression: relational_expression
   33                    | equality_expression "== or !=" relational_expression

   34 logical_and_expression: equality_expression
   35                       | logical_and_expression "&&" equality_expression

   36 logical_or_expression: logical_and_expression
   37                      | logical_or_expression "||" logical_and_expression

   38 assignment_expression: logical_or_expression
   39                      | unary_expression assignment_operator assignment_expression

   40 assignment_operator: "="

   41 match_head: "match" "identifier" "->" declaration_specifiers

   42 match_expression: assignment_expression
   43                 | match_binders_list block_end

   44 match_binders_list: match_binders_list_head_start expression_body
   45                   | match_binders_list_head expression_body

   46 match_binders_list_head_start: match_head block_start match_binder_head

   47 match_binders_list_head: match_binders_list match_binder_head

   48 match_binder_head: "|" match_binder_definer "->"

   49 match_binder_definer: "identifier" "(" match_binder_arguments_list ")"
   50                     | "identifier"

   51 match_binder_arguments_list: "identifier"
   52                            | match_binder_arguments_list "," "identifier"

   53 expression_body: match_expression

   54 expression: expression_body expression_end

   55 declaration_specifiers: declaration_specifier
   56                       | declaration_specifier declaration_specifiers

   57 declaration_specifier: type_specifier_qualifier

   58 type_specifier: "_Bool, char, or int"
   59               | declared_type_name
   60               | typedef_name

   61 declared_type_name: "type" "identifier"

   62 enumtype_decl_head: "type" "identifier"

   63 block_start: "{"
   64            | "{" "NEW_LINE"

   65 block_end: "}"
   66          | "NEW_LINE" "}"

   67 enumtype_decl_specifier: enumtype_decl_head block_start member_types_declaration_list block_end "NEW_LINE"

   68 member_types_declaration_list: member_types_declaration
   69                              | member_types_declaration_list member_types_declaration

   70 member_types_declaration: "identifier" "(" member_declaration_list ")" ";"
   71                         | "identifier" ";"

   72 member_declaration_list: member_declaration
   73                        | member_declaration_list "," member_declaration

   74 member_declaration: specifier_qualifier_list member_declarator

   75 specifier_qualifier_list: type_specifier_qualifier
   76                         | type_specifier_qualifier specifier_qualifier_list

   77 type_specifier_qualifier: type_specifier

   78 member_declarator: declarator

   79 enumeration_constant: "identifier"

   80 declarator: pointer direct_declarator
   81           | direct_declarator

   82 pointer: "*" pointer
   83        | "*"

   84 direct_declarator: "identifier"
   85                  | function_declarator

   86 function_declarator: direct_declarator "[" parameter_type_list "]"

   87 parameter_type_list: parameter_list
   88                    | Îµ

   89 parameter_list: parameter_declaration
   90               | parameter_list "," parameter_declaration

   91 parameter_declaration: declaration_specifiers declarator
   92                      | declaration_specifiers

   93 typedef_name: "type identifier"


Terminals, with rules where they appear

    "end of file" (0) 0 6
    error (256)
    "[" (258) 86
    "]" (259) 86
    "(" (260) 13 15 49 70
    ")" (261) 13 15 49 70
    "NEW_LINE" (262) 5 64 66 67
    "->" (263) 41 48
    "," (264) 17 52 73 90
    "&" (265) 20
    "|" (266) 48
    "*" (267) 21 26 82 83
    "+ or -" <cecko::gt_addop> (268) 22 29
    "!" (269) 23
    "/ or %" <cecko::gt_divop> (270) 27
    "<, >, <=, or >=" <cecko::gt_cmpo> (271) 31
    "== or !=" <cecko::gt_cmpe> (272) 33
    "&&" (273) 35
    "||" (274) 37
    "=" (275) 9 40
    ";" (276) 70 71
    ":" (277)
    "{" (278) 63 64
    "}" (279) 65 66
    "type" (280) 61 62
    "_Bool, char, or int" <cecko::gt_etype> (281) 58
    "sizeof" (282)
    "in" (283)
    "let" (284)
    "match" <cecko::match_type> (285) 41
    "fip" (286)
    "fn" (287)
    "identifier" <cecko::CIName> (288) 15 41 49 50 51 52 61 62 70 71 79 84
    "type identifier" <cecko::CIName> (289) 93
    "integer literal" <int> (290) 11
    "string literal" <cecko::CIName> (291) 12


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    translation_unit (38)
        on left: 1 2
        on right: 0 2
    external_declaration (39)
        on left: 3 4
        on right: 1 2
    expression_end (40)
        on left: 5 6
        on right: 54
    function_definition (41)
        on left: 7
        on right: 3
    function_definition_info (42)
        on left: 8
        on right: 9
    function_definition_head (43)
        on left: 9
        on right: 7
    primary_expression <casem::InstructionWrapper> (44)
        on left: 10 11 12 13
        on right: 14
    postfix_expression <casem::InstructionWrapper> (45)
        on left: 14 15
        on right: 18
    argument_expression_list <casem::InstructionArray> (46)
        on left: 16 17
        on right: 15 17
    unary_expression <casem::InstructionWrapper> (47)
        on left: 18 19
        on right: 24 39
    unary_operator <casem::UnaryOperator> (48)
        on left: 20 21 22 23
        on right: 19
    cast_expression <casem::InstructionWrapper> (49)
        on left: 24
        on right: 19 25 26 27
    multiplicative_expression <casem::InstructionWrapper> (50)
        on left: 25 26 27
        on right: 26 27 28 29
    additive_expression <casem::InstructionWrapper> (51)
        on left: 28 29
        on right: 29 30 31
    relational_expression <casem::InstructionWrapper> (52)
        on left: 30 31
        on right: 31 32 33
    equality_expression <casem::InstructionWrapper> (53)
        on left: 32 33
        on right: 33 34 35
    logical_and_expression <casem::InstructionWrapper> (54)
        on left: 34 35
        on right: 35 36 37
    logical_or_expression <casem::InstructionWrapper> (55)
        on left: 36 37
        on right: 37 38
    assignment_expression <casem::InstructionWrapper> (56)
        on left: 38 39
        on right: 16 17 39 42
    assignment_operator <cecko::gt_cass> (57)
        on left: 40
        on right: 39
    match_head <casem::MatchWrapper> (58)
        on left: 41
        on right: 46
    match_expression <casem::InstructionWrapper> (59)
        on left: 42 43
        on right: 53
    match_binders_list <casem::MatchWrapper> (60)
        on left: 44 45
        on right: 43 47
    match_binders_list_head_start <casem::MatchBinderListHeadData> (61)
        on left: 46
        on right: 44
    match_binders_list_head <casem::MatchBinderListHeadData> (62)
        on left: 47
        on right: 45
    match_binder_head <casem::MatchBinderChackerData> (63)
        on left: 48
        on right: 46 47
    match_binder_definer <casem::MatchBinderChackerData> (64)
        on left: 49 50
        on right: 48
    match_binder_arguments_list <std::vector<cecko::CIName>> (65)
        on left: 51 52
        on right: 49 52
    expression_body <casem::InstructionWrapper> (66)
        on left: 53
        on right: 44 45 54
    expression <casem::InstructionWrapper> (67)
        on left: 54
        on right: 7 13
    declaration_specifiers <casem::CKTypeRefDefPack> (68)
        on left: 55 56
        on right: 8 41 56 91 92
    declaration_specifier <casem::CKTypeRefDefPack> (69)
        on left: 57
        on right: 55 56
    type_specifier <cecko::CKTypeSafeObs> (70)
        on left: 58 59 60
        on right: 77
    declared_type_name <cecko::CIName> (71)
        on left: 61
        on right: 59
    enumtype_decl_head <casem::TaggedTypeDecl> (72)
        on left: 62
        on right: 67
    block_start (73)
        on left: 63 64
        on right: 46 67
    block_end (74)
        on left: 65 66
        on right: 43 67
    enumtype_decl_specifier <cecko::CKStructTypeSafeObs> (75)
        on left: 67
        on right: 4
    member_types_declaration_list <casem::StructObservers> (76)
        on left: 68 69
        on right: 67 69
    member_types_declaration <cecko::CKStructTypeSafeObs> (77)
        on left: 70 71
        on right: 68 69
    member_declaration_list <cecko::CKStructItemArray> (78)
        on left: 72 73
        on right: 70 73
    member_declaration <cecko::CKStructItemArray> (79)
        on left: 74
        on right: 72 73
    specifier_qualifier_list <casem::CKTypeRefDefPack> (80)
        on left: 75 76
        on right: 74 76
    type_specifier_qualifier <casem::CKTypeRefDefPack> (81)
        on left: 77
        on right: 57 75 76
    member_declarator <casem::TypeRefPack_Action> (82)
        on left: 78
        on right: 74
    enumeration_constant <cecko::CIName> (83)
        on left: 79
        on right: 10
    declarator <casem::TypeRefPack_Action> (84)
        on left: 80 81
        on right: 8 78 91
    pointer <casem::TypeRefPack_Convertor> (85)
        on left: 82 83
        on right: 80 82
    direct_declarator <casem::TypeRefPack_Action> (86)
        on left: 84 85
        on right: 80 81 86
    function_declarator <casem::TypeRefPack_Action> (87)
        on left: 86
        on right: 85
    parameter_type_list <casem::TRDArray> (88)
        on left: 87 88
        on right: 86
    parameter_list <casem::TRDArray> (89)
        on left: 89 90
        on right: 87 90
    parameter_declaration <casem::CKTypeRefDefPack> (90)
        on left: 91 92
        on right: 89 90
    typedef_name <cecko::CIName> (91)
        on left: 93
        on right: 60


State 0

    0 $accept: â¢ translation_unit "end of file"

    "type"                 shift, and go to state 1
    "_Bool, char, or int"  shift, and go to state 2
    "type identifier"      shift, and go to state 3

    translation_unit          go to state 4
    external_declaration      go to state 5
    function_definition       go to state 6
    function_definition_info  go to state 7
    function_definition_head  go to state 8
    declaration_specifiers    go to state 9
    declaration_specifier     go to state 10
    type_specifier            go to state 11
    declared_type_name        go to state 12
    enumtype_decl_head        go to state 13
    enumtype_decl_specifier   go to state 14
    type_specifier_qualifier  go to state 15
    typedef_name              go to state 16


State 1

   61 declared_type_name: "type" â¢ "identifier"
   62 enumtype_decl_head: "type" â¢ "identifier"

    "identifier"  shift, and go to state 17


State 2

   58 type_specifier: "_Bool, char, or int" â¢

    $default  reduce using rule 58 (type_specifier)


State 3

   93 typedef_name: "type identifier" â¢

    $default  reduce using rule 93 (typedef_name)


State 4

    0 $accept: translation_unit â¢ "end of file"
    2 translation_unit: translation_unit â¢ external_declaration

    "end of file"          shift, and go to state 18
    "type"                 shift, and go to state 1
    "_Bool, char, or int"  shift, and go to state 2
    "type identifier"      shift, and go to state 3

    external_declaration      go to state 19
    function_definition       go to state 6
    function_definition_info  go to state 7
    function_definition_head  go to state 8
    declaration_specifiers    go to state 9
    declaration_specifier     go to state 10
    type_specifier            go to state 11
    declared_type_name        go to state 12
    enumtype_decl_head        go to state 13
    enumtype_decl_specifier   go to state 14
    type_specifier_qualifier  go to state 15
    typedef_name              go to state 16


State 5

    1 translation_unit: external_declaration â¢

    $default  reduce using rule 1 (translation_unit)


State 6

    3 external_declaration: function_definition â¢

    $default  reduce using rule 3 (external_declaration)


State 7

    9 function_definition_head: function_definition_info â¢ "="

    "="  shift, and go to state 20


State 8

    7 function_definition: function_definition_head â¢ expression

    "("                shift, and go to state 21
    "&"                shift, and go to state 22
    "*"                shift, and go to state 23
    "+ or -"           shift, and go to state 24
    "!"                shift, and go to state 25
    "match"            shift, and go to state 26
    "identifier"       shift, and go to state 27
    "integer literal"  shift, and go to state 28
    "string literal"   shift, and go to state 29

    primary_expression             go to state 30
    postfix_expression             go to state 31
    unary_expression               go to state 32
    unary_operator                 go to state 33
    cast_expression                go to state 34
    multiplicative_expression      go to state 35
    additive_expression            go to state 36
    relational_expression          go to state 37
    equality_expression            go to state 38
    logical_and_expression         go to state 39
    logical_or_expression          go to state 40
    assignment_expression          go to state 41
    match_head                     go to state 42
    match_expression               go to state 43
    match_binders_list             go to state 44
    match_binders_list_head_start  go to state 45
    match_binders_list_head        go to state 46
    expression_body                go to state 47
    expression                     go to state 48
    enumeration_constant           go to state 49


State 9

    8 function_definition_info: declaration_specifiers â¢ declarator

    "*"           shift, and go to state 50
    "identifier"  shift, and go to state 51

    declarator           go to state 52
    pointer              go to state 53
    direct_declarator    go to state 54
    function_declarator  go to state 55


State 10

   55 declaration_specifiers: declaration_specifier â¢
   56                       | declaration_specifier â¢ declaration_specifiers

    "type"                 shift, and go to state 56
    "_Bool, char, or int"  shift, and go to state 2
    "type identifier"      shift, and go to state 3

    $default  reduce using rule 55 (declaration_specifiers)

    declaration_specifiers    go to state 57
    declaration_specifier     go to state 10
    type_specifier            go to state 11
    declared_type_name        go to state 12
    type_specifier_qualifier  go to state 15
    typedef_name              go to state 16


State 11

   77 type_specifier_qualifier: type_specifier â¢

    $default  reduce using rule 77 (type_specifier_qualifier)


State 12

   59 type_specifier: declared_type_name â¢

    $default  reduce using rule 59 (type_specifier)


State 13

   67 enumtype_decl_specifier: enumtype_decl_head â¢ block_start member_types_declaration_list block_end "NEW_LINE"

    "{"  shift, and go to state 58

    block_start  go to state 59


State 14

    4 external_declaration: enumtype_decl_specifier â¢

    $default  reduce using rule 4 (external_declaration)


State 15

   57 declaration_specifier: type_specifier_qualifier â¢

    $default  reduce using rule 57 (declaration_specifier)


State 16

   60 type_specifier: typedef_name â¢

    $default  reduce using rule 60 (type_specifier)


State 17

   61 declared_type_name: "type" "identifier" â¢
   62 enumtype_decl_head: "type" "identifier" â¢

    "{"       reduce using rule 62 (enumtype_decl_head)
    $default  reduce using rule 61 (declared_type_name)


State 18

    0 $accept: translation_unit "end of file" â¢

    $default  accept


State 19

    2 translation_unit: translation_unit external_declaration â¢

    $default  reduce using rule 2 (translation_unit)


State 20

    9 function_definition_head: function_definition_info "=" â¢

    $default  reduce using rule 9 (function_definition_head)


State 21

   13 primary_expression: "(" â¢ expression ")"

    "("                shift, and go to state 21
    "&"                shift, and go to state 22
    "*"                shift, and go to state 23
    "+ or -"           shift, and go to state 24
    "!"                shift, and go to state 25
    "match"            shift, and go to state 26
    "identifier"       shift, and go to state 27
    "integer literal"  shift, and go to state 28
    "string literal"   shift, and go to state 29

    primary_expression             go to state 30
    postfix_expression             go to state 31
    unary_expression               go to state 32
    unary_operator                 go to state 33
    cast_expression                go to state 34
    multiplicative_expression      go to state 35
    additive_expression            go to state 36
    relational_expression          go to state 37
    equality_expression            go to state 38
    logical_and_expression         go to state 39
    logical_or_expression          go to state 40
    assignment_expression          go to state 41
    match_head                     go to state 42
    match_expression               go to state 43
    match_binders_list             go to state 44
    match_binders_list_head_start  go to state 45
    match_binders_list_head        go to state 46
    expression_body                go to state 47
    expression                     go to state 60
    enumeration_constant           go to state 49


State 22

   20 unary_operator: "&" â¢

    $default  reduce using rule 20 (unary_operator)


State 23

   21 unary_operator: "*" â¢

    $default  reduce using rule 21 (unary_operator)


State 24

   22 unary_operator: "+ or -" â¢

    $default  reduce using rule 22 (unary_operator)


State 25

   23 unary_operator: "!" â¢

    $default  reduce using rule 23 (unary_operator)


State 26

   41 match_head: "match" â¢ "identifier" "->" declaration_specifiers

    "identifier"  shift, and go to state 61


State 27

   15 postfix_expression: "identifier" â¢ "(" argument_expression_list ")"
   79 enumeration_constant: "identifier" â¢

    "("  shift, and go to state 62

    $default  reduce using rule 79 (enumeration_constant)


State 28

   11 primary_expression: "integer literal" â¢

    $default  reduce using rule 11 (primary_expression)


State 29

   12 primary_expression: "string literal" â¢

    $default  reduce using rule 12 (primary_expression)


State 30

   14 postfix_expression: primary_expression â¢

    $default  reduce using rule 14 (postfix_expression)


State 31

   18 unary_expression: postfix_expression â¢

    $default  reduce using rule 18 (unary_expression)


State 32

   24 cast_expression: unary_expression â¢
   39 assignment_expression: unary_expression â¢ assignment_operator assignment_expression

    "="  shift, and go to state 63

    $default  reduce using rule 24 (cast_expression)

    assignment_operator  go to state 64


State 33

   19 unary_expression: unary_operator â¢ cast_expression

    "("                shift, and go to state 21
    "&"                shift, and go to state 22
    "*"                shift, and go to state 23
    "+ or -"           shift, and go to state 24
    "!"                shift, and go to state 25
    "identifier"       shift, and go to state 27
    "integer literal"  shift, and go to state 28
    "string literal"   shift, and go to state 29

    primary_expression    go to state 30
    postfix_expression    go to state 31
    unary_expression      go to state 65
    unary_operator        go to state 33
    cast_expression       go to state 66
    enumeration_constant  go to state 49


State 34

   25 multiplicative_expression: cast_expression â¢

    $default  reduce using rule 25 (multiplicative_expression)


State 35

   26 multiplicative_expression: multiplicative_expression â¢ "*" cast_expression
   27                          | multiplicative_expression â¢ "/ or %" cast_expression
   28 additive_expression: multiplicative_expression â¢

    "*"       shift, and go to state 67
    "/ or %"  shift, and go to state 68

    $default  reduce using rule 28 (additive_expression)


State 36

   29 additive_expression: additive_expression â¢ "+ or -" multiplicative_expression
   30 relational_expression: additive_expression â¢

    "+ or -"  shift, and go to state 69

    $default  reduce using rule 30 (relational_expression)


State 37

   31 relational_expression: relational_expression â¢ "<, >, <=, or >=" additive_expression
   32 equality_expression: relational_expression â¢

    "<, >, <=, or >="  shift, and go to state 70

    $default  reduce using rule 32 (equality_expression)


State 38

   33 equality_expression: equality_expression â¢ "== or !=" relational_expression
   34 logical_and_expression: equality_expression â¢

    "== or !="  shift, and go to state 71

    $default  reduce using rule 34 (logical_and_expression)


State 39

   35 logical_and_expression: logical_and_expression â¢ "&&" equality_expression
   36 logical_or_expression: logical_and_expression â¢

    "&&"  shift, and go to state 72

    $default  reduce using rule 36 (logical_or_expression)


State 40

   37 logical_or_expression: logical_or_expression â¢ "||" logical_and_expression
   38 assignment_expression: logical_or_expression â¢

    "||"  shift, and go to state 73

    $default  reduce using rule 38 (assignment_expression)


State 41

   42 match_expression: assignment_expression â¢

    $default  reduce using rule 42 (match_expression)


State 42

   46 match_binders_list_head_start: match_head â¢ block_start match_binder_head

    "{"  shift, and go to state 58

    block_start  go to state 74


State 43

   53 expression_body: match_expression â¢

    $default  reduce using rule 53 (expression_body)


State 44

   43 match_expression: match_binders_list â¢ block_end
   47 match_binders_list_head: match_binders_list â¢ match_binder_head

    "NEW_LINE"  shift, and go to state 75
    "|"         shift, and go to state 76
    "}"         shift, and go to state 77

    match_binder_head  go to state 78
    block_end          go to state 79


State 45

   44 match_binders_list: match_binders_list_head_start â¢ expression_body

    "("                shift, and go to state 21
    "&"                shift, and go to state 22
    "*"                shift, and go to state 23
    "+ or -"           shift, and go to state 24
    "!"                shift, and go to state 25
    "match"            shift, and go to state 26
    "identifier"       shift, and go to state 27
    "integer literal"  shift, and go to state 28
    "string literal"   shift, and go to state 29

    primary_expression             go to state 30
    postfix_expression             go to state 31
    unary_expression               go to state 32
    unary_operator                 go to state 33
    cast_expression                go to state 34
    multiplicative_expression      go to state 35
    additive_expression            go to state 36
    relational_expression          go to state 37
    equality_expression            go to state 38
    logical_and_expression         go to state 39
    logical_or_expression          go to state 40
    assignment_expression          go to state 41
    match_head                     go to state 42
    match_expression               go to state 43
    match_binders_list             go to state 44
    match_binders_list_head_start  go to state 45
    match_binders_list_head        go to state 46
    expression_body                go to state 80
    enumeration_constant           go to state 49


State 46

   45 match_binders_list: match_binders_list_head â¢ expression_body

    "("                shift, and go to state 21
    "&"                shift, and go to state 22
    "*"                shift, and go to state 23
    "+ or -"           shift, and go to state 24
    "!"                shift, and go to state 25
    "match"            shift, and go to state 26
    "identifier"       shift, and go to state 27
    "integer literal"  shift, and go to state 28
    "string literal"   shift, and go to state 29

    primary_expression             go to state 30
    postfix_expression             go to state 31
    unary_expression               go to state 32
    unary_operator                 go to state 33
    cast_expression                go to state 34
    multiplicative_expression      go to state 35
    additive_expression            go to state 36
    relational_expression          go to state 37
    equality_expression            go to state 38
    logical_and_expression         go to state 39
    logical_or_expression          go to state 40
    assignment_expression          go to state 41
    match_head                     go to state 42
    match_expression               go to state 43
    match_binders_list             go to state 44
    match_binders_list_head_start  go to state 45
    match_binders_list_head        go to state 46
    expression_body                go to state 81
    enumeration_constant           go to state 49


State 47

   54 expression: expression_body â¢ expression_end

    "end of file"  shift, and go to state 82
    "NEW_LINE"     shift, and go to state 83

    expression_end  go to state 84


State 48

    7 function_definition: function_definition_head expression â¢

    $default  reduce using rule 7 (function_definition)


State 49

   10 primary_expression: enumeration_constant â¢

    $default  reduce using rule 10 (primary_expression)


State 50

   82 pointer: "*" â¢ pointer
   83        | "*" â¢

    "*"  shift, and go to state 50

    $default  reduce using rule 83 (pointer)

    pointer  go to state 85


State 51

   84 direct_declarator: "identifier" â¢

    $default  reduce using rule 84 (direct_declarator)


State 52

    8 function_definition_info: declaration_specifiers declarator â¢

    $default  reduce using rule 8 (function_definition_info)


State 53

   80 declarator: pointer â¢ direct_declarator

    "identifier"  shift, and go to state 51

    direct_declarator    go to state 86
    function_declarator  go to state 55


State 54

   81 declarator: direct_declarator â¢
   86 function_declarator: direct_declarator â¢ "[" parameter_type_list "]"

    "["  shift, and go to state 87

    $default  reduce using rule 81 (declarator)


State 55

   85 direct_declarator: function_declarator â¢

    $default  reduce using rule 85 (direct_declarator)


State 56

   61 declared_type_name: "type" â¢ "identifier"

    "identifier"  shift, and go to state 88


State 57

   56 declaration_specifiers: declaration_specifier declaration_specifiers â¢

    $default  reduce using rule 56 (declaration_specifiers)


State 58

   63 block_start: "{" â¢
   64            | "{" â¢ "NEW_LINE"

    "NEW_LINE"  shift, and go to state 89

    $default  reduce using rule 63 (block_start)


State 59

   67 enumtype_decl_specifier: enumtype_decl_head block_start â¢ member_types_declaration_list block_end "NEW_LINE"

    "identifier"  shift, and go to state 90

    member_types_declaration_list  go to state 91
    member_types_declaration       go to state 92


State 60

   13 primary_expression: "(" expression â¢ ")"

    ")"  shift, and go to state 93


State 61

   41 match_head: "match" "identifier" â¢ "->" declaration_specifiers

    "->"  shift, and go to state 94


State 62

   15 postfix_expression: "identifier" "(" â¢ argument_expression_list ")"

    "("                shift, and go to state 21
    "&"                shift, and go to state 22
    "*"                shift, and go to state 23
    "+ or -"           shift, and go to state 24
    "!"                shift, and go to state 25
    "identifier"       shift, and go to state 27
    "integer literal"  shift, and go to state 28
    "string literal"   shift, and go to state 29

    primary_expression         go to state 30
    postfix_expression         go to state 31
    argument_expression_list   go to state 95
    unary_expression           go to state 32
    unary_operator             go to state 33
    cast_expression            go to state 34
    multiplicative_expression  go to state 35
    additive_expression        go to state 36
    relational_expression      go to state 37
    equality_expression        go to state 38
    logical_and_expression     go to state 39
    logical_or_expression      go to state 40
    assignment_expression      go to state 96
    enumeration_constant       go to state 49


State 63

   40 assignment_operator: "=" â¢

    $default  reduce using rule 40 (assignment_operator)


State 64

   39 assignment_expression: unary_expression assignment_operator â¢ assignment_expression

    "("                shift, and go to state 21
    "&"                shift, and go to state 22
    "*"                shift, and go to state 23
    "+ or -"           shift, and go to state 24
    "!"                shift, and go to state 25
    "identifier"       shift, and go to state 27
    "integer literal"  shift, and go to state 28
    "string literal"   shift, and go to state 29

    primary_expression         go to state 30
    postfix_expression         go to state 31
    unary_expression           go to state 32
    unary_operator             go to state 33
    cast_expression            go to state 34
    multiplicative_expression  go to state 35
    additive_expression        go to state 36
    relational_expression      go to state 37
    equality_expression        go to state 38
    logical_and_expression     go to state 39
    logical_or_expression      go to state 40
    assignment_expression      go to state 97
    enumeration_constant       go to state 49


State 65

   24 cast_expression: unary_expression â¢

    $default  reduce using rule 24 (cast_expression)


State 66

   19 unary_expression: unary_operator cast_expression â¢

    $default  reduce using rule 19 (unary_expression)


State 67

   26 multiplicative_expression: multiplicative_expression "*" â¢ cast_expression

    "("                shift, and go to state 21
    "&"                shift, and go to state 22
    "*"                shift, and go to state 23
    "+ or -"           shift, and go to state 24
    "!"                shift, and go to state 25
    "identifier"       shift, and go to state 27
    "integer literal"  shift, and go to state 28
    "string literal"   shift, and go to state 29

    primary_expression    go to state 30
    postfix_expression    go to state 31
    unary_expression      go to state 65
    unary_operator        go to state 33
    cast_expression       go to state 98
    enumeration_constant  go to state 49


State 68

   27 multiplicative_expression: multiplicative_expression "/ or %" â¢ cast_expression

    "("                shift, and go to state 21
    "&"                shift, and go to state 22
    "*"                shift, and go to state 23
    "+ or -"           shift, and go to state 24
    "!"                shift, and go to state 25
    "identifier"       shift, and go to state 27
    "integer literal"  shift, and go to state 28
    "string literal"   shift, and go to state 29

    primary_expression    go to state 30
    postfix_expression    go to state 31
    unary_expression      go to state 65
    unary_operator        go to state 33
    cast_expression       go to state 99
    enumeration_constant  go to state 49


State 69

   29 additive_expression: additive_expression "+ or -" â¢ multiplicative_expression

    "("                shift, and go to state 21
    "&"                shift, and go to state 22
    "*"                shift, and go to state 23
    "+ or -"           shift, and go to state 24
    "!"                shift, and go to state 25
    "identifier"       shift, and go to state 27
    "integer literal"  shift, and go to state 28
    "string literal"   shift, and go to state 29

    primary_expression         go to state 30
    postfix_expression         go to state 31
    unary_expression           go to state 65
    unary_operator             go to state 33
    cast_expression            go to state 34
    multiplicative_expression  go to state 100
    enumeration_constant       go to state 49


State 70

   31 relational_expression: relational_expression "<, >, <=, or >=" â¢ additive_expression

    "("                shift, and go to state 21
    "&"                shift, and go to state 22
    "*"                shift, and go to state 23
    "+ or -"           shift, and go to state 24
    "!"                shift, and go to state 25
    "identifier"       shift, and go to state 27
    "integer literal"  shift, and go to state 28
    "string literal"   shift, and go to state 29

    primary_expression         go to state 30
    postfix_expression         go to state 31
    unary_expression           go to state 65
    unary_operator             go to state 33
    cast_expression            go to state 34
    multiplicative_expression  go to state 35
    additive_expression        go to state 101
    enumeration_constant       go to state 49


State 71

   33 equality_expression: equality_expression "== or !=" â¢ relational_expression

    "("                shift, and go to state 21
    "&"                shift, and go to state 22
    "*"                shift, and go to state 23
    "+ or -"           shift, and go to state 24
    "!"                shift, and go to state 25
    "identifier"       shift, and go to state 27
    "integer literal"  shift, and go to state 28
    "string literal"   shift, and go to state 29

    primary_expression         go to state 30
    postfix_expression         go to state 31
    unary_expression           go to state 65
    unary_operator             go to state 33
    cast_expression            go to state 34
    multiplicative_expression  go to state 35
    additive_expression        go to state 36
    relational_expression      go to state 102
    enumeration_constant       go to state 49


State 72

   35 logical_and_expression: logical_and_expression "&&" â¢ equality_expression

    "("                shift, and go to state 21
    "&"                shift, and go to state 22
    "*"                shift, and go to state 23
    "+ or -"           shift, and go to state 24
    "!"                shift, and go to state 25
    "identifier"       shift, and go to state 27
    "integer literal"  shift, and go to state 28
    "string literal"   shift, and go to state 29

    primary_expression         go to state 30
    postfix_expression         go to state 31
    unary_expression           go to state 65
    unary_operator             go to state 33
    cast_expression            go to state 34
    multiplicative_expression  go to state 35
    additive_expression        go to state 36
    relational_expression      go to state 37
    equality_expression        go to state 103
    enumeration_constant       go to state 49


State 73

   37 logical_or_expression: logical_or_expression "||" â¢ logical_and_expression

    "("                shift, and go to state 21
    "&"                shift, and go to state 22
    "*"                shift, and go to state 23
    "+ or -"           shift, and go to state 24
    "!"                shift, and go to state 25
    "identifier"       shift, and go to state 27
    "integer literal"  shift, and go to state 28
    "string literal"   shift, and go to state 29

    primary_expression         go to state 30
    postfix_expression         go to state 31
    unary_expression           go to state 65
    unary_operator             go to state 33
    cast_expression            go to state 34
    multiplicative_expression  go to state 35
    additive_expression        go to state 36
    relational_expression      go to state 37
    equality_expression        go to state 38
    logical_and_expression     go to state 104
    enumeration_constant       go to state 49


State 74

   46 match_binders_list_head_start: match_head block_start â¢ match_binder_head

    "|"  shift, and go to state 76

    match_binder_head  go to state 105


State 75

   66 block_end: "NEW_LINE" â¢ "}"

    "}"  shift, and go to state 106


State 76

   48 match_binder_head: "|" â¢ match_binder_definer "->"

    "identifier"  shift, and go to state 107

    match_binder_definer  go to state 108


State 77

   65 block_end: "}" â¢

    $default  reduce using rule 65 (block_end)


State 78

   47 match_binders_list_head: match_binders_list match_binder_head â¢

    $default  reduce using rule 47 (match_binders_list_head)


State 79

   43 match_expression: match_binders_list block_end â¢

    $default  reduce using rule 43 (match_expression)


State 80

   44 match_binders_list: match_binders_list_head_start expression_body â¢

    $default  reduce using rule 44 (match_binders_list)


State 81

   45 match_binders_list: match_binders_list_head expression_body â¢

    $default  reduce using rule 45 (match_binders_list)


State 82

    6 expression_end: "end of file" â¢

    $default  reduce using rule 6 (expression_end)


State 83

    5 expression_end: "NEW_LINE" â¢

    $default  reduce using rule 5 (expression_end)


State 84

   54 expression: expression_body expression_end â¢

    $default  reduce using rule 54 (expression)


State 85

   82 pointer: "*" pointer â¢

    $default  reduce using rule 82 (pointer)


State 86

   80 declarator: pointer direct_declarator â¢
   86 function_declarator: direct_declarator â¢ "[" parameter_type_list "]"

    "["  shift, and go to state 87

    $default  reduce using rule 80 (declarator)


State 87

   86 function_declarator: direct_declarator "[" â¢ parameter_type_list "]"

    "type"                 shift, and go to state 56
    "_Bool, char, or int"  shift, and go to state 2
    "type identifier"      shift, and go to state 3

    $default  reduce using rule 88 (parameter_type_list)

    declaration_specifiers    go to state 109
    declaration_specifier     go to state 10
    type_specifier            go to state 11
    declared_type_name        go to state 12
    type_specifier_qualifier  go to state 15
    parameter_type_list       go to state 110
    parameter_list            go to state 111
    parameter_declaration     go to state 112
    typedef_name              go to state 16


State 88

   61 declared_type_name: "type" "identifier" â¢

    $default  reduce using rule 61 (declared_type_name)


State 89

   64 block_start: "{" "NEW_LINE" â¢

    $default  reduce using rule 64 (block_start)


State 90

   70 member_types_declaration: "identifier" â¢ "(" member_declaration_list ")" ";"
   71                         | "identifier" â¢ ";"

    "("  shift, and go to state 113
    ";"  shift, and go to state 114


State 91

   67 enumtype_decl_specifier: enumtype_decl_head block_start member_types_declaration_list â¢ block_end "NEW_LINE"
   69 member_types_declaration_list: member_types_declaration_list â¢ member_types_declaration

    "NEW_LINE"    shift, and go to state 75
    "}"           shift, and go to state 77
    "identifier"  shift, and go to state 90

    block_end                 go to state 115
    member_types_declaration  go to state 116


State 92

   68 member_types_declaration_list: member_types_declaration â¢

    $default  reduce using rule 68 (member_types_declaration_list)


State 93

   13 primary_expression: "(" expression ")" â¢

    $default  reduce using rule 13 (primary_expression)


State 94

   41 match_head: "match" "identifier" "->" â¢ declaration_specifiers

    "type"                 shift, and go to state 56
    "_Bool, char, or int"  shift, and go to state 2
    "type identifier"      shift, and go to state 3

    declaration_specifiers    go to state 117
    declaration_specifier     go to state 10
    type_specifier            go to state 11
    declared_type_name        go to state 12
    type_specifier_qualifier  go to state 15
    typedef_name              go to state 16


State 95

   15 postfix_expression: "identifier" "(" argument_expression_list â¢ ")"

    ")"  shift, and go to state 118


State 96

   16 argument_expression_list: assignment_expression â¢
   17                         | assignment_expression â¢ "," argument_expression_list

    ","  shift, and go to state 119

    $default  reduce using rule 16 (argument_expression_list)


State 97

   39 assignment_expression: unary_expression assignment_operator assignment_expression â¢

    $default  reduce using rule 39 (assignment_expression)


State 98

   26 multiplicative_expression: multiplicative_expression "*" cast_expression â¢

    $default  reduce using rule 26 (multiplicative_expression)


State 99

   27 multiplicative_expression: multiplicative_expression "/ or %" cast_expression â¢

    $default  reduce using rule 27 (multiplicative_expression)


State 100

   26 multiplicative_expression: multiplicative_expression â¢ "*" cast_expression
   27                          | multiplicative_expression â¢ "/ or %" cast_expression
   29 additive_expression: additive_expression "+ or -" multiplicative_expression â¢

    "*"       shift, and go to state 67
    "/ or %"  shift, and go to state 68

    $default  reduce using rule 29 (additive_expression)


State 101

   29 additive_expression: additive_expression â¢ "+ or -" multiplicative_expression
   31 relational_expression: relational_expression "<, >, <=, or >=" additive_expression â¢

    "+ or -"  shift, and go to state 69

    $default  reduce using rule 31 (relational_expression)


State 102

   31 relational_expression: relational_expression â¢ "<, >, <=, or >=" additive_expression
   33 equality_expression: equality_expression "== or !=" relational_expression â¢

    "<, >, <=, or >="  shift, and go to state 70

    $default  reduce using rule 33 (equality_expression)


State 103

   33 equality_expression: equality_expression â¢ "== or !=" relational_expression
   35 logical_and_expression: logical_and_expression "&&" equality_expression â¢

    "== or !="  shift, and go to state 71

    $default  reduce using rule 35 (logical_and_expression)


State 104

   35 logical_and_expression: logical_and_expression â¢ "&&" equality_expression
   37 logical_or_expression: logical_or_expression "||" logical_and_expression â¢

    "&&"  shift, and go to state 72

    $default  reduce using rule 37 (logical_or_expression)


State 105

   46 match_binders_list_head_start: match_head block_start match_binder_head â¢

    $default  reduce using rule 46 (match_binders_list_head_start)


State 106

   66 block_end: "NEW_LINE" "}" â¢

    $default  reduce using rule 66 (block_end)


State 107

   49 match_binder_definer: "identifier" â¢ "(" match_binder_arguments_list ")"
   50                     | "identifier" â¢

    "("  shift, and go to state 120

    $default  reduce using rule 50 (match_binder_definer)


State 108

   48 match_binder_head: "|" match_binder_definer â¢ "->"

    "->"  shift, and go to state 121


State 109

   91 parameter_declaration: declaration_specifiers â¢ declarator
   92                      | declaration_specifiers â¢

    "*"           shift, and go to state 50
    "identifier"  shift, and go to state 51

    $default  reduce using rule 92 (parameter_declaration)

    declarator           go to state 122
    pointer              go to state 53
    direct_declarator    go to state 54
    function_declarator  go to state 55


State 110

   86 function_declarator: direct_declarator "[" parameter_type_list â¢ "]"

    "]"  shift, and go to state 123


State 111

   87 parameter_type_list: parameter_list â¢
   90 parameter_list: parameter_list â¢ "," parameter_declaration

    ","  shift, and go to state 124

    $default  reduce using rule 87 (parameter_type_list)


State 112

   89 parameter_list: parameter_declaration â¢

    $default  reduce using rule 89 (parameter_list)


State 113

   70 member_types_declaration: "identifier" "(" â¢ member_declaration_list ")" ";"

    "type"                 shift, and go to state 56
    "_Bool, char, or int"  shift, and go to state 2
    "type identifier"      shift, and go to state 3

    type_specifier            go to state 11
    declared_type_name        go to state 12
    member_declaration_list   go to state 125
    member_declaration        go to state 126
    specifier_qualifier_list  go to state 127
    type_specifier_qualifier  go to state 128
    typedef_name              go to state 16


State 114

   71 member_types_declaration: "identifier" ";" â¢

    $default  reduce using rule 71 (member_types_declaration)


State 115

   67 enumtype_decl_specifier: enumtype_decl_head block_start member_types_declaration_list block_end â¢ "NEW_LINE"

    "NEW_LINE"  shift, and go to state 129


State 116

   69 member_types_declaration_list: member_types_declaration_list member_types_declaration â¢

    $default  reduce using rule 69 (member_types_declaration_list)


State 117

   41 match_head: "match" "identifier" "->" declaration_specifiers â¢

    $default  reduce using rule 41 (match_head)


State 118

   15 postfix_expression: "identifier" "(" argument_expression_list ")" â¢

    $default  reduce using rule 15 (postfix_expression)


State 119

   17 argument_expression_list: assignment_expression "," â¢ argument_expression_list

    "("                shift, and go to state 21
    "&"                shift, and go to state 22
    "*"                shift, and go to state 23
    "+ or -"           shift, and go to state 24
    "!"                shift, and go to state 25
    "identifier"       shift, and go to state 27
    "integer literal"  shift, and go to state 28
    "string literal"   shift, and go to state 29

    primary_expression         go to state 30
    postfix_expression         go to state 31
    argument_expression_list   go to state 130
    unary_expression           go to state 32
    unary_operator             go to state 33
    cast_expression            go to state 34
    multiplicative_expression  go to state 35
    additive_expression        go to state 36
    relational_expression      go to state 37
    equality_expression        go to state 38
    logical_and_expression     go to state 39
    logical_or_expression      go to state 40
    assignment_expression      go to state 96
    enumeration_constant       go to state 49


State 120

   49 match_binder_definer: "identifier" "(" â¢ match_binder_arguments_list ")"

    "identifier"  shift, and go to state 131

    match_binder_arguments_list  go to state 132


State 121

   48 match_binder_head: "|" match_binder_definer "->" â¢

    $default  reduce using rule 48 (match_binder_head)


State 122

   91 parameter_declaration: declaration_specifiers declarator â¢

    $default  reduce using rule 91 (parameter_declaration)


State 123

   86 function_declarator: direct_declarator "[" parameter_type_list "]" â¢

    $default  reduce using rule 86 (function_declarator)


State 124

   90 parameter_list: parameter_list "," â¢ parameter_declaration

    "type"                 shift, and go to state 56
    "_Bool, char, or int"  shift, and go to state 2
    "type identifier"      shift, and go to state 3

    declaration_specifiers    go to state 109
    declaration_specifier     go to state 10
    type_specifier            go to state 11
    declared_type_name        go to state 12
    type_specifier_qualifier  go to state 15
    parameter_declaration     go to state 133
    typedef_name              go to state 16


State 125

   70 member_types_declaration: "identifier" "(" member_declaration_list â¢ ")" ";"
   73 member_declaration_list: member_declaration_list â¢ "," member_declaration

    ")"  shift, and go to state 134
    ","  shift, and go to state 135


State 126

   72 member_declaration_list: member_declaration â¢

    $default  reduce using rule 72 (member_declaration_list)


State 127

   74 member_declaration: specifier_qualifier_list â¢ member_declarator

    "*"           shift, and go to state 50
    "identifier"  shift, and go to state 51

    member_declarator    go to state 136
    declarator           go to state 137
    pointer              go to state 53
    direct_declarator    go to state 54
    function_declarator  go to state 55


State 128

   75 specifier_qualifier_list: type_specifier_qualifier â¢
   76                         | type_specifier_qualifier â¢ specifier_qualifier_list

    "type"                 shift, and go to state 56
    "_Bool, char, or int"  shift, and go to state 2
    "type identifier"      shift, and go to state 3

    $default  reduce using rule 75 (specifier_qualifier_list)

    type_specifier            go to state 11
    declared_type_name        go to state 12
    specifier_qualifier_list  go to state 138
    type_specifier_qualifier  go to state 128
    typedef_name              go to state 16


State 129

   67 enumtype_decl_specifier: enumtype_decl_head block_start member_types_declaration_list block_end "NEW_LINE" â¢

    $default  reduce using rule 67 (enumtype_decl_specifier)


State 130

   17 argument_expression_list: assignment_expression "," argument_expression_list â¢

    $default  reduce using rule 17 (argument_expression_list)


State 131

   51 match_binder_arguments_list: "identifier" â¢

    $default  reduce using rule 51 (match_binder_arguments_list)


State 132

   49 match_binder_definer: "identifier" "(" match_binder_arguments_list â¢ ")"
   52 match_binder_arguments_list: match_binder_arguments_list â¢ "," "identifier"

    ")"  shift, and go to state 139
    ","  shift, and go to state 140


State 133

   90 parameter_list: parameter_list "," parameter_declaration â¢

    $default  reduce using rule 90 (parameter_list)


State 134

   70 member_types_declaration: "identifier" "(" member_declaration_list ")" â¢ ";"

    ";"  shift, and go to state 141


State 135

   73 member_declaration_list: member_declaration_list "," â¢ member_declaration

    "type"                 shift, and go to state 56
    "_Bool, char, or int"  shift, and go to state 2
    "type identifier"      shift, and go to state 3

    type_specifier            go to state 11
    declared_type_name        go to state 12
    member_declaration        go to state 142
    specifier_qualifier_list  go to state 127
    type_specifier_qualifier  go to state 128
    typedef_name              go to state 16


State 136

   74 member_declaration: specifier_qualifier_list member_declarator â¢

    $default  reduce using rule 74 (member_declaration)


State 137

   78 member_declarator: declarator â¢

    $default  reduce using rule 78 (member_declarator)


State 138

   76 specifier_qualifier_list: type_specifier_qualifier specifier_qualifier_list â¢

    $default  reduce using rule 76 (specifier_qualifier_list)


State 139

   49 match_binder_definer: "identifier" "(" match_binder_arguments_list ")" â¢

    $default  reduce using rule 49 (match_binder_definer)


State 140

   52 match_binder_arguments_list: match_binder_arguments_list "," â¢ "identifier"

    "identifier"  shift, and go to state 143


State 141

   70 member_types_declaration: "identifier" "(" member_declaration_list ")" ";" â¢

    $default  reduce using rule 70 (member_types_declaration)


State 142

   73 member_declaration_list: member_declaration_list "," member_declaration â¢

    $default  reduce using rule 73 (member_declaration_list)


State 143

   52 match_binder_arguments_list: match_binder_arguments_list "," "identifier" â¢

    $default  reduce using rule 52 (match_binder_arguments_list)
